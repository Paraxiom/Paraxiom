{
  "lookup": {
    "types": [
      {
        "id": "0",
        "type": {
          "path": [
            "sp_core",
            "crypto",
            "AccountId32"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "1",
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "1",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "32",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "2",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "U8"
          },
          "docs": []
        }
      },
      {
        "id": "3",
        "type": {
          "path": [
            "frame_system",
            "AccountInfo"
          ],
          "params": [
            {
              "name": "Index",
              "type": "4"
            },
            {
              "name": "AccountData",
              "type": "5"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "nonce",
                  "type": "4",
                  "typeName": "Index",
                  "docs": []
                },
                {
                  "name": "consumers",
                  "type": "4",
                  "typeName": "RefCount",
                  "docs": []
                },
                {
                  "name": "providers",
                  "type": "4",
                  "typeName": "RefCount",
                  "docs": []
                },
                {
                  "name": "sufficients",
                  "type": "4",
                  "typeName": "RefCount",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": "5",
                  "typeName": "AccountData",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "4",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "U32"
          },
          "docs": []
        }
      },
      {
        "id": "5",
        "type": {
          "path": [
            "pallet_balances",
            "AccountData"
          ],
          "params": [
            {
              "name": "Balance",
              "type": "6"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "free",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "reserved",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "misc_frozen",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "fee_frozen",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "6",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "U128"
          },
          "docs": []
        }
      },
      {
        "id": "7",
        "type": {
          "path": [
            "frame_support",
            "dispatch",
            "PerDispatchClass"
          ],
          "params": [
            {
              "name": "T",
              "type": "8"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "normal",
                  "type": "8",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "operational",
                  "type": "8",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "mandatory",
                  "type": "8",
                  "typeName": "T",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "8",
        "type": {
          "path": [
            "sp_weights",
            "weight_v2",
            "Weight"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "ref_time",
                  "type": "9",
                  "typeName": "u64",
                  "docs": []
                },
                {
                  "name": "proof_size",
                  "type": "9",
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "9",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Compact": {
              "type": "10"
            }
          },
          "docs": []
        }
      },
      {
        "id": "10",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "U64"
          },
          "docs": []
        }
      },
      {
        "id": "11",
        "type": {
          "path": [
            "primitive_types",
            "H256"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "1",
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "12",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "13",
        "type": {
          "path": [
            "sp_runtime",
            "generic",
            "digest",
            "Digest"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "logs",
                  "type": "14",
                  "typeName": "Vec<DigestItem>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "14",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "15"
            }
          },
          "docs": []
        }
      },
      {
        "id": "15",
        "type": {
          "path": [
            "sp_runtime",
            "generic",
            "digest",
            "DigestItem"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "PreRuntime",
                  "fields": [
                    {
                      "name": null,
                      "type": "16",
                      "typeName": "ConsensusEngineId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "Consensus",
                  "fields": [
                    {
                      "name": null,
                      "type": "16",
                      "typeName": "ConsensusEngineId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Seal",
                  "fields": [
                    {
                      "name": null,
                      "type": "16",
                      "typeName": "ConsensusEngineId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Other",
                  "fields": [
                    {
                      "name": null,
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "RuntimeEnvironmentUpdated",
                  "fields": [],
                  "index": "8",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "16",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "4",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "17",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "18"
            }
          },
          "docs": []
        }
      },
      {
        "id": "18",
        "type": {
          "path": [
            "frame_system",
            "EventRecord"
          ],
          "params": [
            {
              "name": "E",
              "type": "19"
            },
            {
              "name": "T",
              "type": "11"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "phase",
                  "type": "85",
                  "typeName": "Phase",
                  "docs": []
                },
                {
                  "name": "event",
                  "type": "19",
                  "typeName": "E",
                  "docs": []
                },
                {
                  "name": "topics",
                  "type": "86",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "19",
        "type": {
          "path": [
            "paraxiom_runtime",
            "RuntimeEvent"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "System",
                  "fields": [
                    {
                      "name": null,
                      "type": "20",
                      "typeName": "frame_system::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "ParachainSystem",
                  "fields": [
                    {
                      "name": null,
                      "type": "29",
                      "typeName": "cumulus_pallet_parachain_system::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Balances",
                  "fields": [
                    {
                      "name": null,
                      "type": "30",
                      "typeName": "pallet_balances::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "TransactionPayment",
                  "fields": [
                    {
                      "name": null,
                      "type": "32",
                      "typeName": "pallet_transaction_payment::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "11",
                  "docs": []
                },
                {
                  "name": "CollatorSelection",
                  "fields": [
                    {
                      "name": null,
                      "type": "33",
                      "typeName": "pallet_collator_selection::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "21",
                  "docs": []
                },
                {
                  "name": "Session",
                  "fields": [
                    {
                      "name": null,
                      "type": "35",
                      "typeName": "pallet_session::Event",
                      "docs": []
                    }
                  ],
                  "index": "22",
                  "docs": []
                },
                {
                  "name": "XcmpQueue",
                  "fields": [
                    {
                      "name": null,
                      "type": "36",
                      "typeName": "cumulus_pallet_xcmp_queue::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "30",
                  "docs": []
                },
                {
                  "name": "PolkadotXcm",
                  "fields": [
                    {
                      "name": null,
                      "type": "40",
                      "typeName": "pallet_xcm::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "31",
                  "docs": []
                },
                {
                  "name": "CumulusXcm",
                  "fields": [
                    {
                      "name": null,
                      "type": "79",
                      "typeName": "cumulus_pallet_xcm::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "32",
                  "docs": []
                },
                {
                  "name": "DmpQueue",
                  "fields": [
                    {
                      "name": null,
                      "type": "80",
                      "typeName": "cumulus_pallet_dmp_queue::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "33",
                  "docs": []
                },
                {
                  "name": "RegistryPallet",
                  "fields": [
                    {
                      "name": null,
                      "type": "81",
                      "typeName": "pallet_registry::Event<Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "40",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "20",
        "type": {
          "path": [
            "frame_system",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "ExtrinsicSuccess",
                  "fields": [
                    {
                      "name": "dispatch_info",
                      "type": "21",
                      "typeName": "DispatchInfo",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "An extrinsic completed successfully."
                  ]
                },
                {
                  "name": "ExtrinsicFailed",
                  "fields": [
                    {
                      "name": "dispatch_error",
                      "type": "24",
                      "typeName": "DispatchError",
                      "docs": []
                    },
                    {
                      "name": "dispatch_info",
                      "type": "21",
                      "typeName": "DispatchInfo",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "An extrinsic failed."
                  ]
                },
                {
                  "name": "CodeUpdated",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "`:code` was updated."
                  ]
                },
                {
                  "name": "NewAccount",
                  "fields": [
                    {
                      "name": "account",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "A new account was created."
                  ]
                },
                {
                  "name": "KilledAccount",
                  "fields": [
                    {
                      "name": "account",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "An account was reaped."
                  ]
                },
                {
                  "name": "Remarked",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "hash",
                      "type": "11",
                      "typeName": "T::Hash",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "On on-chain remark happened."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Event for the System pallet."
          ]
        }
      },
      {
        "id": "21",
        "type": {
          "path": [
            "frame_support",
            "dispatch",
            "DispatchInfo"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "weight",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "class",
                  "type": "22",
                  "typeName": "DispatchClass",
                  "docs": []
                },
                {
                  "name": "pays_fee",
                  "type": "23",
                  "typeName": "Pays",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "22",
        "type": {
          "path": [
            "frame_support",
            "dispatch",
            "DispatchClass"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Normal",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Operational",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Mandatory",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "23",
        "type": {
          "path": [
            "frame_support",
            "dispatch",
            "Pays"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Yes",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "No",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "24",
        "type": {
          "path": [
            "sp_runtime",
            "DispatchError"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Other",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "CannotLookup",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "BadOrigin",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Module",
                  "fields": [
                    {
                      "name": null,
                      "type": "25",
                      "typeName": "ModuleError",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "ConsumerRemaining",
                  "fields": [],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "NoProviders",
                  "fields": [],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "TooManyConsumers",
                  "fields": [],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "Token",
                  "fields": [
                    {
                      "name": null,
                      "type": "26",
                      "typeName": "TokenError",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "Arithmetic",
                  "fields": [
                    {
                      "name": null,
                      "type": "27",
                      "typeName": "ArithmeticError",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "Transactional",
                  "fields": [
                    {
                      "name": null,
                      "type": "28",
                      "typeName": "TransactionalError",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "Exhausted",
                  "fields": [],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "Corruption",
                  "fields": [],
                  "index": "11",
                  "docs": []
                },
                {
                  "name": "Unavailable",
                  "fields": [],
                  "index": "12",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "25",
        "type": {
          "path": [
            "sp_runtime",
            "ModuleError"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "index",
                  "type": "2",
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "error",
                  "type": "16",
                  "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "26",
        "type": {
          "path": [
            "sp_runtime",
            "TokenError"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "NoFunds",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "WouldDie",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "BelowMinimum",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "CannotCreate",
                  "fields": [],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "UnknownAsset",
                  "fields": [],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Frozen",
                  "fields": [],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Unsupported",
                  "fields": [],
                  "index": "6",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "27",
        "type": {
          "path": [
            "sp_runtime",
            "ArithmeticError"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Underflow",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Overflow",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "DivisionByZero",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "28",
        "type": {
          "path": [
            "sp_runtime",
            "TransactionalError"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "LimitReached",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "NoLayer",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "29",
        "type": {
          "path": [
            "cumulus_pallet_parachain_system",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "ValidationFunctionStored",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "The validation function has been scheduled to apply."
                  ]
                },
                {
                  "name": "ValidationFunctionApplied",
                  "fields": [
                    {
                      "name": "relay_chain_block_num",
                      "type": "4",
                      "typeName": "RelayChainBlockNumber",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "The validation function was applied as of the contained relay chain block number."
                  ]
                },
                {
                  "name": "ValidationFunctionDiscarded",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "The relay-chain aborted the upgrade process."
                  ]
                },
                {
                  "name": "UpgradeAuthorized",
                  "fields": [
                    {
                      "name": "code_hash",
                      "type": "11",
                      "typeName": "T::Hash",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "An upgrade has been authorized."
                  ]
                },
                {
                  "name": "DownwardMessagesReceived",
                  "fields": [
                    {
                      "name": "count",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Some downward messages have been received and will be processed."
                  ]
                },
                {
                  "name": "DownwardMessagesProcessed",
                  "fields": [
                    {
                      "name": "weight_used",
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "dmq_head",
                      "type": "11",
                      "typeName": "relay_chain::Hash",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Downward messages were processed using the given weight."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "30",
        "type": {
          "path": [
            "pallet_balances",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            },
            {
              "name": "I",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Endowed",
                  "fields": [
                    {
                      "name": "account",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "free_balance",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "An account was created with some free balance."
                  ]
                },
                {
                  "name": "DustLost",
                  "fields": [
                    {
                      "name": "account",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                    "resulting in an outright loss."
                  ]
                },
                {
                  "name": "Transfer",
                  "fields": [
                    {
                      "name": "from",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "to",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Transfer succeeded."
                  ]
                },
                {
                  "name": "BalanceSet",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "free",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    },
                    {
                      "name": "reserved",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "A balance was set by root."
                  ]
                },
                {
                  "name": "Reserved",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Some balance was reserved (moved from free to reserved)."
                  ]
                },
                {
                  "name": "Unreserved",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Some balance was unreserved (moved from reserved to free)."
                  ]
                },
                {
                  "name": "ReserveRepatriated",
                  "fields": [
                    {
                      "name": "from",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "to",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    },
                    {
                      "name": "destination_status",
                      "type": "31",
                      "typeName": "Status",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": [
                    "Some balance was moved from the reserve of the first account to the second account.",
                    "Final argument indicates the destination balance type."
                  ]
                },
                {
                  "name": "Deposit",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": [
                    "Some amount was deposited (e.g. for transaction fees)."
                  ]
                },
                {
                  "name": "Withdraw",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": [
                    "Some amount was withdrawn from the account (e.g. for transaction fees)."
                  ]
                },
                {
                  "name": "Slashed",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": [
                    "Some amount was removed from the account (e.g. for misbehavior)."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "31",
        "type": {
          "path": [
            "frame_support",
            "traits",
            "tokens",
            "misc",
            "BalanceStatus"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Free",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Reserved",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "32",
        "type": {
          "path": [
            "pallet_transaction_payment",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "TransactionFeePaid",
                  "fields": [
                    {
                      "name": "who",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "actual_fee",
                      "type": "6",
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "tip",
                      "type": "6",
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                    "has been paid by `who`."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "33",
        "type": {
          "path": [
            "pallet_collator_selection",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "NewInvulnerables",
                  "fields": [
                    {
                      "name": "invulnerables",
                      "type": "34",
                      "typeName": "Vec<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "NewDesiredCandidates",
                  "fields": [
                    {
                      "name": "desired_candidates",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "NewCandidacyBond",
                  "fields": [
                    {
                      "name": "bond_amount",
                      "type": "6",
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "CandidateAdded",
                  "fields": [
                    {
                      "name": "account_id",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": "6",
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "CandidateRemoved",
                  "fields": [
                    {
                      "name": "account_id",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "34",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "0"
            }
          },
          "docs": []
        }
      },
      {
        "id": "35",
        "type": {
          "path": [
            "pallet_session",
            "pallet",
            "Event"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "NewSession",
                  "fields": [
                    {
                      "name": "session_index",
                      "type": "4",
                      "typeName": "SessionIndex",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "New session has happened. Note that the argument is the session index, not the",
                    "block number as the type might suggest."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "36",
        "type": {
          "path": [
            "cumulus_pallet_xcmp_queue",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Success",
                  "fields": [
                    {
                      "name": "message_hash",
                      "type": "37",
                      "typeName": "Option<T::Hash>",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Some XCM was executed ok."
                  ]
                },
                {
                  "name": "Fail",
                  "fields": [
                    {
                      "name": "message_hash",
                      "type": "37",
                      "typeName": "Option<T::Hash>",
                      "docs": []
                    },
                    {
                      "name": "error",
                      "type": "38",
                      "typeName": "XcmError",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Some XCM failed."
                  ]
                },
                {
                  "name": "BadVersion",
                  "fields": [
                    {
                      "name": "message_hash",
                      "type": "37",
                      "typeName": "Option<T::Hash>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Bad XCM version used."
                  ]
                },
                {
                  "name": "BadFormat",
                  "fields": [
                    {
                      "name": "message_hash",
                      "type": "37",
                      "typeName": "Option<T::Hash>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "Bad XCM format used."
                  ]
                },
                {
                  "name": "UpwardMessageSent",
                  "fields": [
                    {
                      "name": "message_hash",
                      "type": "37",
                      "typeName": "Option<T::Hash>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "An upward message was sent to the relay chain."
                  ]
                },
                {
                  "name": "XcmpMessageSent",
                  "fields": [
                    {
                      "name": "message_hash",
                      "type": "37",
                      "typeName": "Option<T::Hash>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "An HRMP message was sent to a sibling parachain."
                  ]
                },
                {
                  "name": "OverweightEnqueued",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "39",
                      "typeName": "ParaId",
                      "docs": []
                    },
                    {
                      "name": "sent_at",
                      "type": "4",
                      "typeName": "RelayBlockNumber",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "type": "10",
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "required",
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": [
                    "An XCM exceeded the individual message weight budget."
                  ]
                },
                {
                  "name": "OverweightServiced",
                  "fields": [
                    {
                      "name": "index",
                      "type": "10",
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "used",
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": [
                    "An XCM from the overweight queue was executed with the given actual weight used."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "37",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "11"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "11",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "38",
        "type": {
          "path": [
            "xcm",
            "v2",
            "traits",
            "Error"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Overflow",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Unimplemented",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "UntrustedReserveLocation",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "UntrustedTeleportLocation",
                  "fields": [],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "MultiLocationFull",
                  "fields": [],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "MultiLocationNotInvertible",
                  "fields": [],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "BadOrigin",
                  "fields": [],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "InvalidLocation",
                  "fields": [],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "AssetNotFound",
                  "fields": [],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "FailedToTransactAsset",
                  "fields": [],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "NotWithdrawable",
                  "fields": [],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "LocationCannotHold",
                  "fields": [],
                  "index": "11",
                  "docs": []
                },
                {
                  "name": "ExceedsMaxMessageSize",
                  "fields": [],
                  "index": "12",
                  "docs": []
                },
                {
                  "name": "DestinationUnsupported",
                  "fields": [],
                  "index": "13",
                  "docs": []
                },
                {
                  "name": "Transport",
                  "fields": [],
                  "index": "14",
                  "docs": []
                },
                {
                  "name": "Unroutable",
                  "fields": [],
                  "index": "15",
                  "docs": []
                },
                {
                  "name": "UnknownClaim",
                  "fields": [],
                  "index": "16",
                  "docs": []
                },
                {
                  "name": "FailedToDecode",
                  "fields": [],
                  "index": "17",
                  "docs": []
                },
                {
                  "name": "MaxWeightInvalid",
                  "fields": [],
                  "index": "18",
                  "docs": []
                },
                {
                  "name": "NotHoldingFees",
                  "fields": [],
                  "index": "19",
                  "docs": []
                },
                {
                  "name": "TooExpensive",
                  "fields": [],
                  "index": "20",
                  "docs": []
                },
                {
                  "name": "Trap",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "21",
                  "docs": []
                },
                {
                  "name": "UnhandledXcmVersion",
                  "fields": [],
                  "index": "22",
                  "docs": []
                },
                {
                  "name": "WeightLimitReached",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "23",
                  "docs": []
                },
                {
                  "name": "Barrier",
                  "fields": [],
                  "index": "24",
                  "docs": []
                },
                {
                  "name": "WeightNotComputable",
                  "fields": [],
                  "index": "25",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "39",
        "type": {
          "path": [
            "polkadot_parachain",
            "primitives",
            "Id"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "40",
        "type": {
          "path": [
            "pallet_xcm",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Attempted",
                  "fields": [
                    {
                      "name": null,
                      "type": "41",
                      "typeName": "xcm::latest::Outcome",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Execution of an XCM message was attempted.",
                    "",
                    "\\[ outcome \\]"
                  ]
                },
                {
                  "name": "Sent",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "52",
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "A XCM message was sent.",
                    "",
                    "\\[ origin, destination, message \\]"
                  ]
                },
                {
                  "name": "UnexpectedResponse",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Query response received which does not match a registered query. This may be because a",
                    "matching query was never registered, it may be because it is a duplicate response, or",
                    "because the query timed out.",
                    "",
                    "\\[ origin location, id \\]"
                  ]
                },
                {
                  "name": "ResponseReady",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "63",
                      "typeName": "Response",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "Query response has been received and is ready for taking with `take_response`. There is",
                    "no registered notification call.",
                    "",
                    "\\[ id, response \\]"
                  ]
                },
                {
                  "name": "Notified",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "2",
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "2",
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Query response has been received and query is removed. The registered notification has",
                    "been dispatched and executed successfully.",
                    "",
                    "\\[ id, pallet index, call index \\]"
                  ]
                },
                {
                  "name": "NotifyOverweight",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "2",
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "2",
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Query response has been received and query is removed. The registered notification could",
                    "not be dispatched because the dispatch weight is greater than the maximum weight",
                    "originally budgeted by this runtime for the query result.",
                    "",
                    "\\[ id, pallet index, call index, actual weight, max budgeted weight \\]"
                  ]
                },
                {
                  "name": "NotifyDispatchError",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "2",
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "2",
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": [
                    "Query response has been received and query is removed. There was a general error with",
                    "dispatching the notification call.",
                    "",
                    "\\[ id, pallet index, call index \\]"
                  ]
                },
                {
                  "name": "NotifyDecodeFailed",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "2",
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "2",
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": [
                    "Query response has been received and query is removed. The dispatch was unable to be",
                    "decoded into a `Call`; this might be due to dispatch function having a signature which",
                    "is not `(origin, QueryId, Response)`.",
                    "",
                    "\\[ id, pallet index, call index \\]"
                  ]
                },
                {
                  "name": "InvalidResponder",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "72",
                      "typeName": "Option<MultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": [
                    "Expected query response has been received but the origin location of the response does",
                    "not match that expected. The query remains registered for a later, valid, response to",
                    "be received and acted upon.",
                    "",
                    "\\[ origin location, id, expected location \\]"
                  ]
                },
                {
                  "name": "InvalidResponderVersion",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": [
                    "Expected query response has been received but the expected origin location placed in",
                    "storage by this runtime previously cannot be decoded. The query remains registered.",
                    "",
                    "This is unexpected (since a location placed in storage in a previously executing",
                    "runtime should be readable prior to query timeout) and dangerous since the possibly",
                    "valid response will be dropped. Manual governance intervention is probably going to be",
                    "needed.",
                    "",
                    "\\[ origin location, id \\]"
                  ]
                },
                {
                  "name": "ResponseTaken",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": [
                    "Received query response has been read and removed.",
                    "",
                    "\\[ id \\]"
                  ]
                },
                {
                  "name": "AssetsTrapped",
                  "fields": [
                    {
                      "name": null,
                      "type": "11",
                      "typeName": "H256",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "73",
                      "typeName": "VersionedMultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "11",
                  "docs": [
                    "Some assets have been placed in an asset trap.",
                    "",
                    "\\[ hash, origin, assets \\]"
                  ]
                },
                {
                  "name": "VersionChangeNotified",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "4",
                      "typeName": "XcmVersion",
                      "docs": []
                    }
                  ],
                  "index": "12",
                  "docs": [
                    "An XCM version change notification message has been attempted to be sent.",
                    "",
                    "\\[ destination, result \\]"
                  ]
                },
                {
                  "name": "SupportedVersionChanged",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "4",
                      "typeName": "XcmVersion",
                      "docs": []
                    }
                  ],
                  "index": "13",
                  "docs": [
                    "The supported version of a location has been changed. This might be through an",
                    "automatic notification or a manual intervention.",
                    "",
                    "\\[ location, XCM version \\]"
                  ]
                },
                {
                  "name": "NotifyTargetSendFail",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "38",
                      "typeName": "XcmError",
                      "docs": []
                    }
                  ],
                  "index": "14",
                  "docs": [
                    "A given location which had a version change subscription was dropped owing to an error",
                    "sending the notification to it.",
                    "",
                    "\\[ location, query ID, error \\]"
                  ]
                },
                {
                  "name": "NotifyTargetMigrationFail",
                  "fields": [
                    {
                      "name": null,
                      "type": "78",
                      "typeName": "VersionedMultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "QueryId",
                      "docs": []
                    }
                  ],
                  "index": "15",
                  "docs": [
                    "A given location which had a version change subscription was dropped owing to an error",
                    "migrating the location to our new XCM format.",
                    "",
                    "\\[ location, query ID \\]"
                  ]
                },
                {
                  "name": "AssetsClaimed",
                  "fields": [
                    {
                      "name": null,
                      "type": "11",
                      "typeName": "H256",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "73",
                      "typeName": "VersionedMultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "16",
                  "docs": [
                    "Some assets have been claimed from an asset trap",
                    "",
                    "\\[ hash, origin, assets \\]"
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "41",
        "type": {
          "path": [
            "xcm",
            "v2",
            "traits",
            "Outcome"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Complete",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Incomplete",
                  "fields": [
                    {
                      "name": null,
                      "type": "10",
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "38",
                      "typeName": "Error",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Error",
                  "fields": [
                    {
                      "name": null,
                      "type": "38",
                      "typeName": "Error",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "42",
        "type": {
          "path": [
            "xcm",
            "v1",
            "multilocation",
            "MultiLocation"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "parents",
                  "type": "2",
                  "typeName": "u8",
                  "docs": []
                },
                {
                  "name": "interior",
                  "type": "43",
                  "typeName": "Junctions",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "43",
        "type": {
          "path": [
            "xcm",
            "v1",
            "multilocation",
            "Junctions"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Here",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "X1",
                  "fields": [
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "X2",
                  "fields": [
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "X3",
                  "fields": [
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "X4",
                  "fields": [
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "X5",
                  "fields": [
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "X6",
                  "fields": [
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "X7",
                  "fields": [
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "X8",
                  "fields": [
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "44",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "44",
        "type": {
          "path": [
            "xcm",
            "v1",
            "junction",
            "Junction"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Parachain",
                  "fields": [
                    {
                      "name": null,
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "AccountId32",
                  "fields": [
                    {
                      "name": "network",
                      "type": "46",
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "id",
                      "type": "1",
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "AccountIndex64",
                  "fields": [
                    {
                      "name": "network",
                      "type": "46",
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "AccountKey20",
                  "fields": [
                    {
                      "name": "network",
                      "type": "46",
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "type": "48",
                      "typeName": "[u8; 20]",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "PalletInstance",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "GeneralIndex",
                  "fields": [
                    {
                      "name": null,
                      "type": "49",
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "GeneralKey",
                  "fields": [
                    {
                      "name": null,
                      "type": "47",
                      "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "OnlyChild",
                  "fields": [],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "Plurality",
                  "fields": [
                    {
                      "name": "id",
                      "type": "50",
                      "typeName": "BodyId",
                      "docs": []
                    },
                    {
                      "name": "part",
                      "type": "51",
                      "typeName": "BodyPart",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "45",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Compact": {
              "type": "4"
            }
          },
          "docs": []
        }
      },
      {
        "id": "46",
        "type": {
          "path": [
            "xcm",
            "v0",
            "junction",
            "NetworkId"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Any",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Named",
                  "fields": [
                    {
                      "name": null,
                      "type": "47",
                      "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Polkadot",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Kusama",
                  "fields": [],
                  "index": "3",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "47",
        "type": {
          "path": [
            "sp_core",
            "bounded",
            "weak_bounded_vec",
            "WeakBoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "2"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "12",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "48",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "20",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "49",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Compact": {
              "type": "6"
            }
          },
          "docs": []
        }
      },
      {
        "id": "50",
        "type": {
          "path": [
            "xcm",
            "v0",
            "junction",
            "BodyId"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Unit",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Named",
                  "fields": [
                    {
                      "name": null,
                      "type": "47",
                      "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Index",
                  "fields": [
                    {
                      "name": null,
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Executive",
                  "fields": [],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "Technical",
                  "fields": [],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Legislative",
                  "fields": [],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Judicial",
                  "fields": [],
                  "index": "6",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "51",
        "type": {
          "path": [
            "xcm",
            "v0",
            "junction",
            "BodyPart"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Voice",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Members",
                  "fields": [
                    {
                      "name": "count",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Fraction",
                  "fields": [
                    {
                      "name": "nom",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "denom",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "AtLeastProportion",
                  "fields": [
                    {
                      "name": "nom",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "denom",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "MoreThanProportion",
                  "fields": [
                    {
                      "name": "nom",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "denom",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "52",
        "type": {
          "path": [
            "xcm",
            "v2",
            "Xcm"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "53",
                  "typeName": "Vec<Instruction<RuntimeCall>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "53",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "54"
            }
          },
          "docs": []
        }
      },
      {
        "id": "54",
        "type": {
          "path": [
            "xcm",
            "v2",
            "Instruction"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "WithdrawAsset",
                  "fields": [
                    {
                      "name": null,
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "ReserveAssetDeposited",
                  "fields": [
                    {
                      "name": null,
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "ReceiveTeleportedAsset",
                  "fields": [
                    {
                      "name": null,
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "QueryResponse",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "type": "63",
                      "typeName": "Response",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "TransferAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "TransferReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "type": "52",
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Transact",
                  "fields": [
                    {
                      "name": "origin_type",
                      "type": "66",
                      "typeName": "OriginKind",
                      "docs": []
                    },
                    {
                      "name": "require_weight_at_most",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": "67",
                      "typeName": "DoubleEncoded<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "HrmpNewChannelOpenRequest",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "HrmpChannelAccepted",
                  "fields": [
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "HrmpChannelClosing",
                  "fields": [
                    {
                      "name": "initiator",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "ClearOrigin",
                  "fields": [],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "DescendOrigin",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "InteriorMultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "11",
                  "docs": []
                },
                {
                  "name": "ReportError",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "12",
                  "docs": []
                },
                {
                  "name": "DepositAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "13",
                  "docs": []
                },
                {
                  "name": "DepositReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "type": "52",
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": "14",
                  "docs": []
                },
                {
                  "name": "ExchangeAsset",
                  "fields": [
                    {
                      "name": "give",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "receive",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "15",
                  "docs": []
                },
                {
                  "name": "InitiateReserveWithdraw",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "reserve",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "type": "52",
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": "16",
                  "docs": []
                },
                {
                  "name": "InitiateTeleport",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "type": "52",
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": "17",
                  "docs": []
                },
                {
                  "name": "QueryHolding",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "18",
                  "docs": []
                },
                {
                  "name": "BuyExecution",
                  "fields": [
                    {
                      "name": "fees",
                      "type": "57",
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "type": "71",
                      "typeName": "WeightLimit",
                      "docs": []
                    }
                  ],
                  "index": "19",
                  "docs": []
                },
                {
                  "name": "RefundSurplus",
                  "fields": [],
                  "index": "20",
                  "docs": []
                },
                {
                  "name": "SetErrorHandler",
                  "fields": [
                    {
                      "name": null,
                      "type": "52",
                      "typeName": "Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "21",
                  "docs": []
                },
                {
                  "name": "SetAppendix",
                  "fields": [
                    {
                      "name": null,
                      "type": "52",
                      "typeName": "Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "22",
                  "docs": []
                },
                {
                  "name": "ClearError",
                  "fields": [],
                  "index": "23",
                  "docs": []
                },
                {
                  "name": "ClaimAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "ticket",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "24",
                  "docs": []
                },
                {
                  "name": "Trap",
                  "fields": [
                    {
                      "name": null,
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "25",
                  "docs": []
                },
                {
                  "name": "SubscribeVersion",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "26",
                  "docs": []
                },
                {
                  "name": "UnsubscribeVersion",
                  "fields": [],
                  "index": "27",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "55",
        "type": {
          "path": [
            "xcm",
            "v1",
            "multiasset",
            "MultiAssets"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "56",
                  "typeName": "Vec<MultiAsset>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "56",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "57"
            }
          },
          "docs": []
        }
      },
      {
        "id": "57",
        "type": {
          "path": [
            "xcm",
            "v1",
            "multiasset",
            "MultiAsset"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "id",
                  "type": "58",
                  "typeName": "AssetId",
                  "docs": []
                },
                {
                  "name": "fun",
                  "type": "59",
                  "typeName": "Fungibility",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "58",
        "type": {
          "path": [
            "xcm",
            "v1",
            "multiasset",
            "AssetId"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Concrete",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Abstract",
                  "fields": [
                    {
                      "name": null,
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "59",
        "type": {
          "path": [
            "xcm",
            "v1",
            "multiasset",
            "Fungibility"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Fungible",
                  "fields": [
                    {
                      "name": null,
                      "type": "49",
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "NonFungible",
                  "fields": [
                    {
                      "name": null,
                      "type": "60",
                      "typeName": "AssetInstance",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "60",
        "type": {
          "path": [
            "xcm",
            "v1",
            "multiasset",
            "AssetInstance"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Undefined",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Index",
                  "fields": [
                    {
                      "name": null,
                      "type": "49",
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Array4",
                  "fields": [
                    {
                      "name": null,
                      "type": "16",
                      "typeName": "[u8; 4]",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Array8",
                  "fields": [
                    {
                      "name": null,
                      "type": "61",
                      "typeName": "[u8; 8]",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "Array16",
                  "fields": [
                    {
                      "name": null,
                      "type": "62",
                      "typeName": "[u8; 16]",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Array32",
                  "fields": [
                    {
                      "name": null,
                      "type": "1",
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Blob",
                  "fields": [
                    {
                      "name": null,
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "61",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "8",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "62",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "16",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "63",
        "type": {
          "path": [
            "xcm",
            "v2",
            "Response"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Null",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Assets",
                  "fields": [
                    {
                      "name": null,
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "ExecutionResult",
                  "fields": [
                    {
                      "name": null,
                      "type": "64",
                      "typeName": "Option<(u32, Error)>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Version",
                  "fields": [
                    {
                      "name": null,
                      "type": "4",
                      "typeName": "super::Version",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "64",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "65"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "65",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "65",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "4",
              "38"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "66",
        "type": {
          "path": [
            "xcm",
            "v0",
            "OriginKind"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Native",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "SovereignAccount",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Superuser",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Xcm",
                  "fields": [],
                  "index": "3",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "67",
        "type": {
          "path": [
            "xcm",
            "double_encoded",
            "DoubleEncoded"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "encoded",
                  "type": "12",
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "68",
        "type": {
          "path": [
            "xcm",
            "v1",
            "multiasset",
            "MultiAssetFilter"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Definite",
                  "fields": [
                    {
                      "name": null,
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Wild",
                  "fields": [
                    {
                      "name": null,
                      "type": "69",
                      "typeName": "WildMultiAsset",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "69",
        "type": {
          "path": [
            "xcm",
            "v1",
            "multiasset",
            "WildMultiAsset"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "All",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "AllOf",
                  "fields": [
                    {
                      "name": "id",
                      "type": "58",
                      "typeName": "AssetId",
                      "docs": []
                    },
                    {
                      "name": "fun",
                      "type": "70",
                      "typeName": "WildFungibility",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "70",
        "type": {
          "path": [
            "xcm",
            "v1",
            "multiasset",
            "WildFungibility"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Fungible",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "NonFungible",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "71",
        "type": {
          "path": [
            "xcm",
            "v2",
            "WeightLimit"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Unlimited",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Limited",
                  "fields": [
                    {
                      "name": null,
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "72",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "42"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "73",
        "type": {
          "path": [
            "xcm",
            "VersionedMultiAssets"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "V0",
                  "fields": [
                    {
                      "name": null,
                      "type": "74",
                      "typeName": "Vec<v0::MultiAsset>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "V1",
                  "fields": [
                    {
                      "name": null,
                      "type": "55",
                      "typeName": "v1::MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "74",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "75"
            }
          },
          "docs": []
        }
      },
      {
        "id": "75",
        "type": {
          "path": [
            "xcm",
            "v0",
            "multi_asset",
            "MultiAsset"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "All",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "AllFungible",
                  "fields": [],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "AllNonFungible",
                  "fields": [],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "AllAbstractFungible",
                  "fields": [
                    {
                      "name": "id",
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "AllAbstractNonFungible",
                  "fields": [
                    {
                      "name": "class",
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "AllConcreteFungible",
                  "fields": [
                    {
                      "name": "id",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "AllConcreteNonFungible",
                  "fields": [
                    {
                      "name": "class",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "AbstractFungible",
                  "fields": [
                    {
                      "name": "id",
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "49",
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "AbstractNonFungible",
                  "fields": [
                    {
                      "name": "class",
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "instance",
                      "type": "60",
                      "typeName": "AssetInstance",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "ConcreteFungible",
                  "fields": [
                    {
                      "name": "id",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "49",
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "ConcreteNonFungible",
                  "fields": [
                    {
                      "name": "class",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "instance",
                      "type": "60",
                      "typeName": "AssetInstance",
                      "docs": []
                    }
                  ],
                  "index": "11",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "76",
        "type": {
          "path": [
            "xcm",
            "v0",
            "multi_location",
            "MultiLocation"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Null",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "X1",
                  "fields": [
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "X2",
                  "fields": [
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "X3",
                  "fields": [
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "X4",
                  "fields": [
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "X5",
                  "fields": [
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "X6",
                  "fields": [
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "X7",
                  "fields": [
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "X8",
                  "fields": [
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "77",
                      "typeName": "Junction",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "77",
        "type": {
          "path": [
            "xcm",
            "v0",
            "junction",
            "Junction"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Parent",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Parachain",
                  "fields": [
                    {
                      "name": null,
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "AccountId32",
                  "fields": [
                    {
                      "name": "network",
                      "type": "46",
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "id",
                      "type": "1",
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "AccountIndex64",
                  "fields": [
                    {
                      "name": "network",
                      "type": "46",
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "AccountKey20",
                  "fields": [
                    {
                      "name": "network",
                      "type": "46",
                      "typeName": "NetworkId",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "type": "48",
                      "typeName": "[u8; 20]",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "PalletInstance",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": "u8",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "GeneralIndex",
                  "fields": [
                    {
                      "name": null,
                      "type": "49",
                      "typeName": "u128",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "GeneralKey",
                  "fields": [
                    {
                      "name": null,
                      "type": "47",
                      "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "OnlyChild",
                  "fields": [],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "Plurality",
                  "fields": [
                    {
                      "name": "id",
                      "type": "50",
                      "typeName": "BodyId",
                      "docs": []
                    },
                    {
                      "name": "part",
                      "type": "51",
                      "typeName": "BodyPart",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "78",
        "type": {
          "path": [
            "xcm",
            "VersionedMultiLocation"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "V0",
                  "fields": [
                    {
                      "name": null,
                      "type": "76",
                      "typeName": "v0::MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "V1",
                  "fields": [
                    {
                      "name": null,
                      "type": "42",
                      "typeName": "v1::MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "79",
        "type": {
          "path": [
            "cumulus_pallet_xcm",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "InvalidFormat",
                  "fields": [
                    {
                      "name": null,
                      "type": "61",
                      "typeName": "[u8; 8]",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Downward message is invalid XCM.",
                    "\\[ id \\]"
                  ]
                },
                {
                  "name": "UnsupportedVersion",
                  "fields": [
                    {
                      "name": null,
                      "type": "61",
                      "typeName": "[u8; 8]",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Downward message is unsupported version of XCM.",
                    "\\[ id \\]"
                  ]
                },
                {
                  "name": "ExecutedDownward",
                  "fields": [
                    {
                      "name": null,
                      "type": "61",
                      "typeName": "[u8; 8]",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "41",
                      "typeName": "Outcome",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Downward message executed with the given outcome.",
                    "\\[ id, outcome \\]"
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "80",
        "type": {
          "path": [
            "cumulus_pallet_dmp_queue",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "InvalidFormat",
                  "fields": [
                    {
                      "name": "message_id",
                      "type": "1",
                      "typeName": "MessageId",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Downward message is invalid XCM."
                  ]
                },
                {
                  "name": "UnsupportedVersion",
                  "fields": [
                    {
                      "name": "message_id",
                      "type": "1",
                      "typeName": "MessageId",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Downward message is unsupported version of XCM."
                  ]
                },
                {
                  "name": "ExecutedDownward",
                  "fields": [
                    {
                      "name": "message_id",
                      "type": "1",
                      "typeName": "MessageId",
                      "docs": []
                    },
                    {
                      "name": "outcome",
                      "type": "41",
                      "typeName": "Outcome",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Downward message executed with the given outcome."
                  ]
                },
                {
                  "name": "WeightExhausted",
                  "fields": [
                    {
                      "name": "message_id",
                      "type": "1",
                      "typeName": "MessageId",
                      "docs": []
                    },
                    {
                      "name": "remaining_weight",
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "required_weight",
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "The weight limit for handling downward messages was reached."
                  ]
                },
                {
                  "name": "OverweightEnqueued",
                  "fields": [
                    {
                      "name": "message_id",
                      "type": "1",
                      "typeName": "MessageId",
                      "docs": []
                    },
                    {
                      "name": "overweight_index",
                      "type": "10",
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "required_weight",
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Downward message is overweight and was placed in the overweight queue."
                  ]
                },
                {
                  "name": "OverweightServiced",
                  "fields": [
                    {
                      "name": "overweight_index",
                      "type": "10",
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "weight_used",
                      "type": "8",
                      "typeName": "Weight",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Downward message from the overweight queue was executed."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "81",
        "type": {
          "path": [
            "pallet_registry",
            "pallet",
            "Event"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "RegFeed",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "type": "82",
                      "typeName": "RegStrT",
                      "docs": []
                    },
                    {
                      "name": "feed",
                      "type": "83",
                      "typeName": "ApiFeed<T::BlockNumber>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "New feed is submitted."
                  ]
                },
                {
                  "name": "UnRegFeed",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "0",
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "key",
                      "type": "82",
                      "typeName": "RegStrT",
                      "docs": []
                    },
                    {
                      "name": "feed",
                      "type": "83",
                      "typeName": "ApiFeed<T::BlockNumber>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Apifeed is removed."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tThe [event](https://docs.substrate.io/main-docs/build/events-errors/) emitted\n\t\t\tby this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "82",
        "type": {
          "path": [
            "sp_core",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "2"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "12",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "83",
        "type": {
          "path": [
            "pallet_registry",
            "pallet",
            "ApiFeed"
          ],
          "params": [
            {
              "name": "BlockNumber",
              "type": "4"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "requested_block_number",
                  "type": "4",
                  "typeName": "BlockNumber",
                  "docs": []
                },
                {
                  "name": "url",
                  "type": "84",
                  "typeName": "Option<RegStrT>",
                  "docs": []
                },
                {
                  "name": "vpath",
                  "type": "84",
                  "typeName": "Option<RegStrT>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "84",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "82"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "82",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "85",
        "type": {
          "path": [
            "frame_system",
            "Phase"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "ApplyExtrinsic",
                  "fields": [
                    {
                      "name": null,
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Finalization",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Initialization",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "86",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "11"
            }
          },
          "docs": []
        }
      },
      {
        "id": "87",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "88"
            }
          },
          "docs": []
        }
      },
      {
        "id": "88",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "4",
              "4"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "89",
        "type": {
          "path": [
            "frame_system",
            "LastRuntimeUpgradeInfo"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "spec_version",
                  "type": "45",
                  "typeName": "codec::Compact<u32>",
                  "docs": []
                },
                {
                  "name": "spec_name",
                  "type": "90",
                  "typeName": "sp_runtime::RuntimeString",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "90",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "Str"
          },
          "docs": []
        }
      },
      {
        "id": "91",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "Bool"
          },
          "docs": []
        }
      },
      {
        "id": "92",
        "type": {
          "path": [
            "frame_system",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "remark",
                  "fields": [
                    {
                      "name": "remark",
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Make some on-chain remark.",
                    "",
                    "# <weight>",
                    "- `O(1)`",
                    "# </weight>"
                  ]
                },
                {
                  "name": "set_heap_pages",
                  "fields": [
                    {
                      "name": "pages",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Set the number of pages in the WebAssembly environment's heap."
                  ]
                },
                {
                  "name": "set_code",
                  "fields": [
                    {
                      "name": "code",
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Set the new runtime code.",
                    "",
                    "# <weight>",
                    "- `O(C + S)` where `C` length of `code` and `S` complexity of `can_set_code`",
                    "- 1 call to `can_set_code`: `O(S)` (calls `sp_io::misc::runtime_version` which is",
                    "  expensive).",
                    "- 1 storage write (codec `O(C)`).",
                    "- 1 digest item.",
                    "- 1 event.",
                    "The weight of this function is dependent on the runtime, but generally this is very",
                    "expensive. We will treat this as a full block.",
                    "# </weight>"
                  ]
                },
                {
                  "name": "set_code_without_checks",
                  "fields": [
                    {
                      "name": "code",
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "Set the new runtime code without doing any checks of the given `code`.",
                    "",
                    "# <weight>",
                    "- `O(C)` where `C` length of `code`",
                    "- 1 storage write (codec `O(C)`).",
                    "- 1 digest item.",
                    "- 1 event.",
                    "The weight of this function is dependent on the runtime. We will treat this as a full",
                    "block. # </weight>"
                  ]
                },
                {
                  "name": "set_storage",
                  "fields": [
                    {
                      "name": "items",
                      "type": "93",
                      "typeName": "Vec<KeyValue>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Set some items of storage."
                  ]
                },
                {
                  "name": "kill_storage",
                  "fields": [
                    {
                      "name": "keys",
                      "type": "95",
                      "typeName": "Vec<Key>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Kill some items from storage."
                  ]
                },
                {
                  "name": "kill_prefix",
                  "fields": [
                    {
                      "name": "prefix",
                      "type": "12",
                      "typeName": "Key",
                      "docs": []
                    },
                    {
                      "name": "subkeys",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": [
                    "Kill all storage items with a key that starts with the given prefix.",
                    "",
                    "**NOTE:** We rely on the Root origin to provide us the number of subkeys under",
                    "the prefix we are removing to accurately calculate the weight of this function."
                  ]
                },
                {
                  "name": "remark_with_event",
                  "fields": [
                    {
                      "name": "remark",
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": [
                    "Make some on-chain remark and emit event."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "93",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "94"
            }
          },
          "docs": []
        }
      },
      {
        "id": "94",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "12",
              "12"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "95",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "12"
            }
          },
          "docs": []
        }
      },
      {
        "id": "96",
        "type": {
          "path": [
            "frame_system",
            "limits",
            "BlockWeights"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "base_block",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "max_block",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "per_class",
                  "type": "97",
                  "typeName": "PerDispatchClass<WeightsPerClass>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "97",
        "type": {
          "path": [
            "frame_support",
            "dispatch",
            "PerDispatchClass"
          ],
          "params": [
            {
              "name": "T",
              "type": "98"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "normal",
                  "type": "98",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "operational",
                  "type": "98",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "mandatory",
                  "type": "98",
                  "typeName": "T",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "98",
        "type": {
          "path": [
            "frame_system",
            "limits",
            "WeightsPerClass"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "base_extrinsic",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "max_extrinsic",
                  "type": "99",
                  "typeName": "Option<Weight>",
                  "docs": []
                },
                {
                  "name": "max_total",
                  "type": "99",
                  "typeName": "Option<Weight>",
                  "docs": []
                },
                {
                  "name": "reserved",
                  "type": "99",
                  "typeName": "Option<Weight>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "99",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "8"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "8",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "100",
        "type": {
          "path": [
            "frame_system",
            "limits",
            "BlockLength"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "max",
                  "type": "101",
                  "typeName": "PerDispatchClass<u32>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "101",
        "type": {
          "path": [
            "frame_support",
            "dispatch",
            "PerDispatchClass"
          ],
          "params": [
            {
              "name": "T",
              "type": "4"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "normal",
                  "type": "4",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "operational",
                  "type": "4",
                  "typeName": "T",
                  "docs": []
                },
                {
                  "name": "mandatory",
                  "type": "4",
                  "typeName": "T",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "102",
        "type": {
          "path": [
            "sp_weights",
            "RuntimeDbWeight"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "read",
                  "type": "10",
                  "typeName": "u64",
                  "docs": []
                },
                {
                  "name": "write",
                  "type": "10",
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "103",
        "type": {
          "path": [
            "sp_version",
            "RuntimeVersion"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "spec_name",
                  "type": "90",
                  "typeName": "RuntimeString",
                  "docs": []
                },
                {
                  "name": "impl_name",
                  "type": "90",
                  "typeName": "RuntimeString",
                  "docs": []
                },
                {
                  "name": "authoring_version",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "spec_version",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "impl_version",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "apis",
                  "type": "104",
                  "typeName": "ApisVec",
                  "docs": []
                },
                {
                  "name": "transaction_version",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "state_version",
                  "type": "2",
                  "typeName": "u8",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "104",
        "type": {
          "path": [
            "Cow"
          ],
          "params": [
            {
              "name": "T",
              "type": "105"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "105",
                  "typeName": null,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "105",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "106"
            }
          },
          "docs": []
        }
      },
      {
        "id": "106",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "61",
              "4"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "107",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Primitive": "U16"
          },
          "docs": []
        }
      },
      {
        "id": "108",
        "type": {
          "path": [
            "frame_system",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "InvalidSpecName",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "The name of specification does not match between the current runtime",
                    "and the new runtime."
                  ]
                },
                {
                  "name": "SpecVersionNeedsToIncrease",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "The specification version is not allowed to decrease between the current runtime",
                    "and the new runtime."
                  ]
                },
                {
                  "name": "FailedToExtractRuntimeVersion",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Failed to extract the runtime version from the new runtime.",
                    "",
                    "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                  ]
                },
                {
                  "name": "NonDefaultComposite",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "Suicide called when the account has non-default composite data."
                  ]
                },
                {
                  "name": "NonZeroRefCount",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "There is a non-zero reference count preventing the account from being purged."
                  ]
                },
                {
                  "name": "CallFiltered",
                  "fields": [],
                  "index": "5",
                  "docs": [
                    "The origin filter prevent the call to be dispatched."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Error for the System pallet"
          ]
        }
      },
      {
        "id": "109",
        "type": {
          "path": [
            "polkadot_primitives",
            "v2",
            "PersistedValidationData"
          ],
          "params": [
            {
              "name": "H",
              "type": "11"
            },
            {
              "name": "N",
              "type": "4"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "parent_head",
                  "type": "110",
                  "typeName": "HeadData",
                  "docs": []
                },
                {
                  "name": "relay_parent_number",
                  "type": "4",
                  "typeName": "N",
                  "docs": []
                },
                {
                  "name": "relay_parent_storage_root",
                  "type": "11",
                  "typeName": "H",
                  "docs": []
                },
                {
                  "name": "max_pov_size",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "110",
        "type": {
          "path": [
            "polkadot_parachain",
            "primitives",
            "HeadData"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "12",
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "111",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "112"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "112",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "112",
        "type": {
          "path": [
            "polkadot_primitives",
            "v2",
            "UpgradeRestriction"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Present",
                  "fields": [],
                  "index": "0",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "113",
        "type": {
          "path": [
            "sp_trie",
            "storage_proof",
            "StorageProof"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "trie_nodes",
                  "type": "114",
                  "typeName": "BTreeSet<Vec<u8>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "114",
        "type": {
          "path": [
            "BTreeSet"
          ],
          "params": [
            {
              "name": "T",
              "type": "12"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "95",
                  "typeName": null,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "115",
        "type": {
          "path": [
            "cumulus_pallet_parachain_system",
            "relay_state_snapshot",
            "MessagingStateSnapshot"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "dmq_mqc_head",
                  "type": "11",
                  "typeName": "relay_chain::Hash",
                  "docs": []
                },
                {
                  "name": "relay_dispatch_queue_size",
                  "type": "88",
                  "typeName": "(u32, u32)",
                  "docs": []
                },
                {
                  "name": "ingress_channels",
                  "type": "116",
                  "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
                  "docs": []
                },
                {
                  "name": "egress_channels",
                  "type": "116",
                  "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "116",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "117"
            }
          },
          "docs": []
        }
      },
      {
        "id": "117",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "39",
              "118"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "118",
        "type": {
          "path": [
            "polkadot_primitives",
            "v2",
            "AbridgedHrmpChannel"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "max_capacity",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_total_size",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_message_size",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "msg_count",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "total_size",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "mqc_head",
                  "type": "37",
                  "typeName": "Option<Hash>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "119",
        "type": {
          "path": [
            "polkadot_primitives",
            "v2",
            "AbridgedHostConfiguration"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "max_code_size",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_head_data_size",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_upward_queue_count",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_upward_queue_size",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_upward_message_size",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "max_upward_message_num_per_candidate",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "hrmp_max_message_num_per_candidate",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "validation_upgrade_cooldown",
                  "type": "4",
                  "typeName": "BlockNumber",
                  "docs": []
                },
                {
                  "name": "validation_upgrade_delay",
                  "type": "4",
                  "typeName": "BlockNumber",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "120",
        "type": {
          "path": [
            "cumulus_primitives_parachain_inherent",
            "MessageQueueChain"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "11",
                  "typeName": "RelayHash",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "121",
        "type": {
          "path": [
            "BTreeMap"
          ],
          "params": [
            {
              "name": "K",
              "type": "39"
            },
            {
              "name": "V",
              "type": "120"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "122",
                  "typeName": null,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "122",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "123"
            }
          },
          "docs": []
        }
      },
      {
        "id": "123",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "39",
              "120"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "124",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "125"
            }
          },
          "docs": []
        }
      },
      {
        "id": "125",
        "type": {
          "path": [
            "polkadot_core_primitives",
            "OutboundHrmpMessage"
          ],
          "params": [
            {
              "name": "Id",
              "type": "39"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "recipient",
                  "type": "39",
                  "typeName": "Id",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": "12",
                  "typeName": "sp_std::vec::Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "126",
        "type": {
          "path": [
            "cumulus_pallet_parachain_system",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "set_validation_data",
                  "fields": [
                    {
                      "name": "data",
                      "type": "127",
                      "typeName": "ParachainInherentData",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Set the current validation data.",
                    "",
                    "This should be invoked exactly once per block. It will panic at the finalization",
                    "phase if the call was not invoked.",
                    "",
                    "The dispatch origin for this call must be `Inherent`",
                    "",
                    "As a side effect, this function upgrades the current validation function",
                    "if the appropriate time has come."
                  ]
                },
                {
                  "name": "sudo_send_upward_message",
                  "fields": [
                    {
                      "name": "message",
                      "type": "12",
                      "typeName": "UpwardMessage",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "authorize_upgrade",
                  "fields": [
                    {
                      "name": "code_hash",
                      "type": "11",
                      "typeName": "T::Hash",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "enact_authorized_upgrade",
                  "fields": [
                    {
                      "name": "code",
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "127",
        "type": {
          "path": [
            "cumulus_primitives_parachain_inherent",
            "ParachainInherentData"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "validation_data",
                  "type": "109",
                  "typeName": "PersistedValidationData",
                  "docs": []
                },
                {
                  "name": "relay_chain_state",
                  "type": "113",
                  "typeName": "sp_trie::StorageProof",
                  "docs": []
                },
                {
                  "name": "downward_messages",
                  "type": "128",
                  "typeName": "Vec<InboundDownwardMessage>",
                  "docs": []
                },
                {
                  "name": "horizontal_messages",
                  "type": "130",
                  "typeName": "BTreeMap<ParaId, Vec<InboundHrmpMessage>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "128",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "129"
            }
          },
          "docs": []
        }
      },
      {
        "id": "129",
        "type": {
          "path": [
            "polkadot_core_primitives",
            "InboundDownwardMessage"
          ],
          "params": [
            {
              "name": "BlockNumber",
              "type": "4"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "sent_at",
                  "type": "4",
                  "typeName": "BlockNumber",
                  "docs": []
                },
                {
                  "name": "msg",
                  "type": "12",
                  "typeName": "DownwardMessage",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "130",
        "type": {
          "path": [
            "BTreeMap"
          ],
          "params": [
            {
              "name": "K",
              "type": "39"
            },
            {
              "name": "V",
              "type": "131"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "133",
                  "typeName": null,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "131",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "132"
            }
          },
          "docs": []
        }
      },
      {
        "id": "132",
        "type": {
          "path": [
            "polkadot_core_primitives",
            "InboundHrmpMessage"
          ],
          "params": [
            {
              "name": "BlockNumber",
              "type": "4"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "sent_at",
                  "type": "4",
                  "typeName": "BlockNumber",
                  "docs": []
                },
                {
                  "name": "data",
                  "type": "12",
                  "typeName": "sp_std::vec::Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "133",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "134"
            }
          },
          "docs": []
        }
      },
      {
        "id": "134",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "39",
              "131"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "135",
        "type": {
          "path": [
            "cumulus_pallet_parachain_system",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "OverlappingUpgrades",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Attempt to upgrade validation function while existing upgrade pending"
                  ]
                },
                {
                  "name": "ProhibitedByPolkadot",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Polkadot currently prohibits this parachain from upgrading its validation function"
                  ]
                },
                {
                  "name": "TooBig",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "The supplied validation function has compiled into a blob larger than Polkadot is",
                    "willing to run"
                  ]
                },
                {
                  "name": "ValidationDataNotAvailable",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "The inherent which supplies the validation data did not run this block"
                  ]
                },
                {
                  "name": "HostConfigurationNotAvailable",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "The inherent which supplies the host configuration did not run this block"
                  ]
                },
                {
                  "name": "NotScheduled",
                  "fields": [],
                  "index": "5",
                  "docs": [
                    "No validation function upgrade is currently scheduled."
                  ]
                },
                {
                  "name": "NothingAuthorized",
                  "fields": [],
                  "index": "6",
                  "docs": [
                    "No code upgrade has been authorized."
                  ]
                },
                {
                  "name": "Unauthorized",
                  "fields": [],
                  "index": "7",
                  "docs": [
                    "The given code upgrade has not been authorized."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "136",
        "type": {
          "path": [
            "pallet_timestamp",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "set",
                  "fields": [
                    {
                      "name": "now",
                      "type": "9",
                      "typeName": "T::Moment",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Set the current time.",
                    "",
                    "This call should be invoked exactly once per block. It will panic at the finalization",
                    "phase, if this call hasn't been invoked by that time.",
                    "",
                    "The timestamp should be greater than the previous one by the amount specified by",
                    "`MinimumPeriod`.",
                    "",
                    "The dispatch origin for this call must be `Inherent`.",
                    "",
                    "# <weight>",
                    "- `O(1)` (Note that implementations of `OnTimestampSet` must also be `O(1)`)",
                    "- 1 storage read and 1 storage mutation (codec `O(1)`). (because of `DidUpdate::take` in",
                    "  `on_finalize`)",
                    "- 1 event handler `on_timestamp_set`. Must be `O(1)`.",
                    "# </weight>"
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "137",
        "type": {
          "path": [
            "sp_core",
            "bounded",
            "weak_bounded_vec",
            "WeakBoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "138"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "140",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "138",
        "type": {
          "path": [
            "pallet_balances",
            "BalanceLock"
          ],
          "params": [
            {
              "name": "Balance",
              "type": "6"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "id",
                  "type": "61",
                  "typeName": "LockIdentifier",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                },
                {
                  "name": "reasons",
                  "type": "139",
                  "typeName": "Reasons",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "139",
        "type": {
          "path": [
            "pallet_balances",
            "Reasons"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Fee",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Misc",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "All",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "140",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "138"
            }
          },
          "docs": []
        }
      },
      {
        "id": "141",
        "type": {
          "path": [
            "sp_core",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "142"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "143",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "142",
        "type": {
          "path": [
            "pallet_balances",
            "ReserveData"
          ],
          "params": [
            {
              "name": "ReserveIdentifier",
              "type": "61"
            },
            {
              "name": "Balance",
              "type": "6"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "id",
                  "type": "61",
                  "typeName": "ReserveIdentifier",
                  "docs": []
                },
                {
                  "name": "amount",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "143",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "142"
            }
          },
          "docs": []
        }
      },
      {
        "id": "144",
        "type": {
          "path": [
            "pallet_balances",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            },
            {
              "name": "I",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "transfer",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "145",
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": "49",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Transfer some liquid free balance to another account.",
                    "",
                    "`transfer` will set the `FreeBalance` of the sender and receiver.",
                    "If the sender's account is below the existential deposit as a result",
                    "of the transfer, the account will be reaped.",
                    "",
                    "The dispatch origin for this call must be `Signed` by the transactor.",
                    "",
                    "# <weight>",
                    "- Dependent on arguments but not critical, given proper implementations for input config",
                    "  types. See related functions below.",
                    "- It contains a limited number of reads and writes internally and no complex",
                    "  computation.",
                    "",
                    "Related functions:",
                    "",
                    "  - `ensure_can_withdraw` is always called internally but has a bounded complexity.",
                    "  - Transferring balances to accounts that did not exist before will cause",
                    "    `T::OnNewAccount::on_new_account` to be called.",
                    "  - Removing enough funds from an account will trigger `T::DustRemoval::on_unbalanced`.",
                    "  - `transfer_keep_alive` works the same way as `transfer`, but has an additional check",
                    "    that the transfer will not kill the origin account.",
                    "---------------------------------",
                    "- Origin account is already in memory, so no DB operations for them.",
                    "# </weight>"
                  ]
                },
                {
                  "name": "set_balance",
                  "fields": [
                    {
                      "name": "who",
                      "type": "145",
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "new_free",
                      "type": "49",
                      "typeName": "T::Balance",
                      "docs": []
                    },
                    {
                      "name": "new_reserved",
                      "type": "49",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Set the balances of a given account.",
                    "",
                    "This will alter `FreeBalance` and `ReservedBalance` in storage. it will",
                    "also alter the total issuance of the system (`TotalIssuance`) appropriately.",
                    "If the new free or reserved balance is below the existential deposit,",
                    "it will reset the account nonce (`frame_system::AccountNonce`).",
                    "",
                    "The dispatch origin for this call is `root`."
                  ]
                },
                {
                  "name": "force_transfer",
                  "fields": [
                    {
                      "name": "source",
                      "type": "145",
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "145",
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": "49",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Exactly as `transfer`, except the origin must be root and the source account may be",
                    "specified.",
                    "# <weight>",
                    "- Same as transfer, but additional read and write because the source account is not",
                    "  assumed to be in the overlay.",
                    "# </weight>"
                  ]
                },
                {
                  "name": "transfer_keep_alive",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "145",
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": "49",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "Same as the [`transfer`] call, but with a check that the transfer will not kill the",
                    "origin account.",
                    "",
                    "99% of the time you want [`transfer`] instead.",
                    "",
                    "[`transfer`]: struct.Pallet.html#method.transfer"
                  ]
                },
                {
                  "name": "transfer_all",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "145",
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "keep_alive",
                      "type": "91",
                      "typeName": "bool",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Transfer the entire transferable balance from the caller account.",
                    "",
                    "NOTE: This function only attempts to transfer _transferable_ balances. This means that",
                    "any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be",
                    "transferred by this function. To ensure that this function results in a killed account,",
                    "you might need to prepare the account by removing any reference counters, storage",
                    "deposits, etc...",
                    "",
                    "The dispatch origin of this call must be Signed.",
                    "",
                    "- `dest`: The recipient of the transfer.",
                    "- `keep_alive`: A boolean to determine if the `transfer_all` operation should send all",
                    "  of the funds the account has, causing the sender account to be killed (false), or",
                    "  transfer everything except at least the existential deposit, which will guarantee to",
                    "  keep the sender account alive (true). # <weight>",
                    "- O(1). Just like transfer, but reading the user's transferable balance first.",
                    "  #</weight>"
                  ]
                },
                {
                  "name": "force_unreserve",
                  "fields": [
                    {
                      "name": "who",
                      "type": "145",
                      "typeName": "AccountIdLookupOf<T>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": "6",
                      "typeName": "T::Balance",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Unreserve some balance from a user by force.",
                    "",
                    "Can only be called by ROOT."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "145",
        "type": {
          "path": [
            "sp_runtime",
            "multiaddress",
            "MultiAddress"
          ],
          "params": [
            {
              "name": "AccountId",
              "type": "0"
            },
            {
              "name": "AccountIndex",
              "type": "146"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Id",
                  "fields": [
                    {
                      "name": null,
                      "type": "0",
                      "typeName": "AccountId",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Index",
                  "fields": [
                    {
                      "name": null,
                      "type": "147",
                      "typeName": "AccountIndex",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Raw",
                  "fields": [
                    {
                      "name": null,
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Address32",
                  "fields": [
                    {
                      "name": null,
                      "type": "1",
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "Address20",
                  "fields": [
                    {
                      "name": null,
                      "type": "48",
                      "typeName": "[u8; 20]",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "146",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": []
          },
          "docs": []
        }
      },
      {
        "id": "147",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Compact": {
              "type": "146"
            }
          },
          "docs": []
        }
      },
      {
        "id": "148",
        "type": {
          "path": [
            "pallet_balances",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            },
            {
              "name": "I",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "VestingBalance",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Vesting balance too high to send value"
                  ]
                },
                {
                  "name": "LiquidityRestrictions",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Account liquidity restrictions prevent withdrawal"
                  ]
                },
                {
                  "name": "InsufficientBalance",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Balance too low to send value."
                  ]
                },
                {
                  "name": "ExistentialDeposit",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "Value too low to create account due to existential deposit"
                  ]
                },
                {
                  "name": "KeepAlive",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "Transfer/payment would kill account"
                  ]
                },
                {
                  "name": "ExistingVestingSchedule",
                  "fields": [],
                  "index": "5",
                  "docs": [
                    "A vesting schedule already exists for this account"
                  ]
                },
                {
                  "name": "DeadAccount",
                  "fields": [],
                  "index": "6",
                  "docs": [
                    "Beneficiary account must pre-exist"
                  ]
                },
                {
                  "name": "TooManyReserves",
                  "fields": [],
                  "index": "7",
                  "docs": [
                    "Number of named reserves exceed MaxReserves"
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "149",
        "type": {
          "path": [
            "sp_arithmetic",
            "fixed_point",
            "FixedU128"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "6",
                  "typeName": "u128",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "150",
        "type": {
          "path": [
            "pallet_transaction_payment",
            "Releases"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "V1Ancient",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "V2",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "151",
        "type": {
          "path": [
            "sp_core",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "152"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "154",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "152",
        "type": {
          "path": [
            "pallet_authorship",
            "UncleEntryItem"
          ],
          "params": [
            {
              "name": "BlockNumber",
              "type": "4"
            },
            {
              "name": "Hash",
              "type": "11"
            },
            {
              "name": "Author",
              "type": "0"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "InclusionHeight",
                  "fields": [
                    {
                      "name": null,
                      "type": "4",
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Uncle",
                  "fields": [
                    {
                      "name": null,
                      "type": "11",
                      "typeName": "Hash",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": "153",
                      "typeName": "Option<Author>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "153",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "0"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "0",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "154",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "152"
            }
          },
          "docs": []
        }
      },
      {
        "id": "155",
        "type": {
          "path": [
            "pallet_authorship",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "set_uncles",
                  "fields": [
                    {
                      "name": "new_uncles",
                      "type": "156",
                      "typeName": "Vec<T::Header>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Provide a set of uncles."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "156",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "157"
            }
          },
          "docs": []
        }
      },
      {
        "id": "157",
        "type": {
          "path": [
            "sp_runtime",
            "generic",
            "header",
            "Header"
          ],
          "params": [
            {
              "name": "Number",
              "type": "4"
            },
            {
              "name": "Hash",
              "type": "158"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "parent_hash",
                  "type": "11",
                  "typeName": "Hash::Output",
                  "docs": []
                },
                {
                  "name": "number",
                  "type": "45",
                  "typeName": "Number",
                  "docs": []
                },
                {
                  "name": "state_root",
                  "type": "11",
                  "typeName": "Hash::Output",
                  "docs": []
                },
                {
                  "name": "extrinsics_root",
                  "type": "11",
                  "typeName": "Hash::Output",
                  "docs": []
                },
                {
                  "name": "digest",
                  "type": "13",
                  "typeName": "Digest",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "158",
        "type": {
          "path": [
            "sp_runtime",
            "traits",
            "BlakeTwo256"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "159",
        "type": {
          "path": [
            "pallet_authorship",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "InvalidUncleParent",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "The uncle parent not in the chain."
                  ]
                },
                {
                  "name": "UnclesAlreadySet",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Uncles already set in the block."
                  ]
                },
                {
                  "name": "TooManyUncles",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Too many uncles."
                  ]
                },
                {
                  "name": "GenesisUncle",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "The uncle is genesis."
                  ]
                },
                {
                  "name": "TooHighUncle",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "The uncle is too high in chain."
                  ]
                },
                {
                  "name": "UncleAlreadyIncluded",
                  "fields": [],
                  "index": "5",
                  "docs": [
                    "The uncle is already included."
                  ]
                },
                {
                  "name": "OldUncle",
                  "fields": [],
                  "index": "6",
                  "docs": [
                    "The uncle isn't recent enough to be included."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "160",
        "type": {
          "path": [
            "sp_core",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "0"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "34",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "161",
        "type": {
          "path": [
            "sp_core",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "162"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "163",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "162",
        "type": {
          "path": [
            "pallet_collator_selection",
            "pallet",
            "CandidateInfo"
          ],
          "params": [
            {
              "name": "AccountId",
              "type": "0"
            },
            {
              "name": "Balance",
              "type": "6"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "who",
                  "type": "0",
                  "typeName": "AccountId",
                  "docs": []
                },
                {
                  "name": "deposit",
                  "type": "6",
                  "typeName": "Balance",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "163",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "162"
            }
          },
          "docs": []
        }
      },
      {
        "id": "164",
        "type": {
          "path": [
            "pallet_collator_selection",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "set_invulnerables",
                  "fields": [
                    {
                      "name": "new",
                      "type": "34",
                      "typeName": "Vec<T::AccountId>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Set the list of invulnerable (fixed) collators."
                  ]
                },
                {
                  "name": "set_desired_candidates",
                  "fields": [
                    {
                      "name": "max",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Set the ideal number of collators (not including the invulnerables).",
                    "If lowering this number, then the number of running collators could be higher than this figure.",
                    "Aside from that edge case, there should be no other way to have more collators than the desired number."
                  ]
                },
                {
                  "name": "set_candidacy_bond",
                  "fields": [
                    {
                      "name": "bond",
                      "type": "6",
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Set the candidacy bond amount."
                  ]
                },
                {
                  "name": "register_as_candidate",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "Register this account as a collator candidate. The account must (a) already have",
                    "registered session keys and (b) be able to reserve the `CandidacyBond`.",
                    "",
                    "This call is not available to `Invulnerable` collators."
                  ]
                },
                {
                  "name": "leave_intent",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "Deregister `origin` as a collator candidate. Note that the collator can only leave on",
                    "session change. The `CandidacyBond` will be unreserved immediately.",
                    "",
                    "This call will fail if the total number of candidates would drop below `MinCandidates`.",
                    "",
                    "This call is not available to `Invulnerable` collators."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "165",
        "type": {
          "path": [
            "pallet_collator_selection",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "TooManyCandidates",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Too many candidates"
                  ]
                },
                {
                  "name": "TooFewCandidates",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Too few candidates"
                  ]
                },
                {
                  "name": "Unknown",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Unknown error"
                  ]
                },
                {
                  "name": "Permission",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "Permission issue"
                  ]
                },
                {
                  "name": "AlreadyCandidate",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "User is already a candidate"
                  ]
                },
                {
                  "name": "NotCandidate",
                  "fields": [],
                  "index": "5",
                  "docs": [
                    "User is not a candidate"
                  ]
                },
                {
                  "name": "TooManyInvulnerables",
                  "fields": [],
                  "index": "6",
                  "docs": [
                    "Too many invulnerables"
                  ]
                },
                {
                  "name": "AlreadyInvulnerable",
                  "fields": [],
                  "index": "7",
                  "docs": [
                    "User is already an Invulnerable"
                  ]
                },
                {
                  "name": "NoAssociatedValidatorId",
                  "fields": [],
                  "index": "8",
                  "docs": [
                    "Account has no associated validator ID"
                  ]
                },
                {
                  "name": "ValidatorNotRegistered",
                  "fields": [],
                  "index": "9",
                  "docs": [
                    "Validator ID is not yet registered"
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "166",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "167"
            }
          },
          "docs": []
        }
      },
      {
        "id": "167",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "0",
              "168"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "168",
        "type": {
          "path": [
            "paraxiom_runtime",
            "SessionKeys"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "aura",
                  "type": "169",
                  "typeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "169",
        "type": {
          "path": [
            "sp_consensus_aura",
            "sr25519",
            "app_sr25519",
            "Public"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "170",
                  "typeName": "sr25519::Public",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "170",
        "type": {
          "path": [
            "sp_core",
            "sr25519",
            "Public"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "1",
                  "typeName": "[u8; 32]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "171",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "4"
            }
          },
          "docs": []
        }
      },
      {
        "id": "172",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "173",
              "12"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "173",
        "type": {
          "path": [
            "sp_core",
            "crypto",
            "KeyTypeId"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "16",
                  "typeName": "[u8; 4]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "174",
        "type": {
          "path": [
            "pallet_session",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "set_keys",
                  "fields": [
                    {
                      "name": "keys",
                      "type": "168",
                      "typeName": "T::Keys",
                      "docs": []
                    },
                    {
                      "name": "proof",
                      "type": "12",
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Sets the session key(s) of the function caller to `keys`.",
                    "Allows an account to set its session key prior to becoming a validator.",
                    "This doesn't take effect until the next session.",
                    "",
                    "The dispatch origin of this function must be signed.",
                    "",
                    "# <weight>",
                    "- Complexity: `O(1)`. Actual cost depends on the number of length of",
                    "  `T::Keys::key_ids()` which is fixed.",
                    "- DbReads: `origin account`, `T::ValidatorIdOf`, `NextKeys`",
                    "- DbWrites: `origin account`, `NextKeys`",
                    "- DbReads per key id: `KeyOwner`",
                    "- DbWrites per key id: `KeyOwner`",
                    "# </weight>"
                  ]
                },
                {
                  "name": "purge_keys",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Removes any session key(s) of the function caller.",
                    "",
                    "This doesn't take effect until the next session.",
                    "",
                    "The dispatch origin of this function must be Signed and the account must be either be",
                    "convertible to a validator ID using the chain's typical addressing system (this usually",
                    "means being a controller account) or directly convertible into a validator ID (which",
                    "usually means being a stash account).",
                    "",
                    "# <weight>",
                    "- Complexity: `O(1)` in number of key types. Actual cost depends on the number of length",
                    "  of `T::Keys::key_ids()` which is fixed.",
                    "- DbReads: `T::ValidatorIdOf`, `NextKeys`, `origin account`",
                    "- DbWrites: `NextKeys`, `origin account`",
                    "- DbWrites per key id: `KeyOwner`",
                    "# </weight>"
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "175",
        "type": {
          "path": [
            "pallet_session",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "InvalidProof",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Invalid ownership proof."
                  ]
                },
                {
                  "name": "NoAssociatedValidatorId",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "No associated validator ID for account."
                  ]
                },
                {
                  "name": "DuplicatedKey",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Registered duplicate key."
                  ]
                },
                {
                  "name": "NoKeys",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "No keys are associated with this account."
                  ]
                },
                {
                  "name": "NoAccount",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "Key setting account is not live, so it's impossible to associate keys."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Error for the session pallet."
          ]
        }
      },
      {
        "id": "176",
        "type": {
          "path": [
            "sp_core",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "169"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "177",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "177",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "169"
            }
          },
          "docs": []
        }
      },
      {
        "id": "178",
        "type": {
          "path": [
            "sp_consensus_slots",
            "Slot"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "10",
                  "typeName": "u64",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "179",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "180"
            }
          },
          "docs": []
        }
      },
      {
        "id": "180",
        "type": {
          "path": [
            "cumulus_pallet_xcmp_queue",
            "InboundChannelDetails"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "sender",
                  "type": "39",
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "state",
                  "type": "181",
                  "typeName": "InboundState",
                  "docs": []
                },
                {
                  "name": "message_metadata",
                  "type": "182",
                  "typeName": "Vec<(RelayBlockNumber, XcmpMessageFormat)>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "181",
        "type": {
          "path": [
            "cumulus_pallet_xcmp_queue",
            "InboundState"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Ok",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Suspended",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "182",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "183"
            }
          },
          "docs": []
        }
      },
      {
        "id": "183",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "4",
              "184"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "184",
        "type": {
          "path": [
            "polkadot_parachain",
            "primitives",
            "XcmpMessageFormat"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "ConcatenatedVersionedXcm",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "ConcatenatedEncodedBlob",
                  "fields": [],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Signals",
                  "fields": [],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "185",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "39",
              "4"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "186",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "187"
            }
          },
          "docs": []
        }
      },
      {
        "id": "187",
        "type": {
          "path": [
            "cumulus_pallet_xcmp_queue",
            "OutboundChannelDetails"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "recipient",
                  "type": "39",
                  "typeName": "ParaId",
                  "docs": []
                },
                {
                  "name": "state",
                  "type": "188",
                  "typeName": "OutboundState",
                  "docs": []
                },
                {
                  "name": "signals_exist",
                  "type": "91",
                  "typeName": "bool",
                  "docs": []
                },
                {
                  "name": "first_index",
                  "type": "107",
                  "typeName": "u16",
                  "docs": []
                },
                {
                  "name": "last_index",
                  "type": "107",
                  "typeName": "u16",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "188",
        "type": {
          "path": [
            "cumulus_pallet_xcmp_queue",
            "OutboundState"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Ok",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Suspended",
                  "fields": [],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "189",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "39",
              "107"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "190",
        "type": {
          "path": [
            "cumulus_pallet_xcmp_queue",
            "QueueConfigData"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "suspend_threshold",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "drop_threshold",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "resume_threshold",
                  "type": "4",
                  "typeName": "u32",
                  "docs": []
                },
                {
                  "name": "threshold_weight",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "weight_restrict_decay",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                },
                {
                  "name": "xcmp_max_individual_weight",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "191",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "39",
              "4",
              "12"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "192",
        "type": {
          "path": [
            "cumulus_pallet_xcmp_queue",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "service_overweight",
                  "fields": [
                    {
                      "name": "index",
                      "type": "10",
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "type": "10",
                      "typeName": "XcmWeight",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Services a single overweight XCM.",
                    "",
                    "- `origin`: Must pass `ExecuteOverweightOrigin`.",
                    "- `index`: The index of the overweight XCM to service",
                    "- `weight_limit`: The amount of weight that XCM execution may take.",
                    "",
                    "Errors:",
                    "- `BadOverweightIndex`: XCM under `index` is not found in the `Overweight` storage map.",
                    "- `BadXcm`: XCM under `index` cannot be properly decoded into a valid XCM format.",
                    "- `WeightOverLimit`: XCM execution may use greater `weight_limit`.",
                    "",
                    "Events:",
                    "- `OverweightServiced`: On success."
                  ]
                },
                {
                  "name": "suspend_xcm_execution",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Suspends all XCM executions for the XCMP queue, regardless of the sender's origin.",
                    "",
                    "- `origin`: Must pass `ControllerOrigin`."
                  ]
                },
                {
                  "name": "resume_xcm_execution",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Resumes all XCM executions for the XCMP queue.",
                    "",
                    "Note that this function doesn't change the status of the in/out bound channels.",
                    "",
                    "- `origin`: Must pass `ControllerOrigin`."
                  ]
                },
                {
                  "name": "update_suspend_threshold",
                  "fields": [
                    {
                      "name": "new",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "Overwrites the number of pages of messages which must be in the queue for the other side to be told to",
                    "suspend their sending.",
                    "",
                    "- `origin`: Must pass `Root`.",
                    "- `new`: Desired value for `QueueConfigData.suspend_value`"
                  ]
                },
                {
                  "name": "update_drop_threshold",
                  "fields": [
                    {
                      "name": "new",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Overwrites the number of pages of messages which must be in the queue after which we drop any further",
                    "messages from the channel.",
                    "",
                    "- `origin`: Must pass `Root`.",
                    "- `new`: Desired value for `QueueConfigData.drop_threshold`"
                  ]
                },
                {
                  "name": "update_resume_threshold",
                  "fields": [
                    {
                      "name": "new",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Overwrites the number of pages of messages which the queue must be reduced to before it signals that",
                    "message sending may recommence after it has been suspended.",
                    "",
                    "- `origin`: Must pass `Root`.",
                    "- `new`: Desired value for `QueueConfigData.resume_threshold`"
                  ]
                },
                {
                  "name": "update_threshold_weight",
                  "fields": [
                    {
                      "name": "new",
                      "type": "10",
                      "typeName": "XcmWeight",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": [
                    "Overwrites the amount of remaining weight under which we stop processing messages.",
                    "",
                    "- `origin`: Must pass `Root`.",
                    "- `new`: Desired value for `QueueConfigData.threshold_weight`"
                  ]
                },
                {
                  "name": "update_weight_restrict_decay",
                  "fields": [
                    {
                      "name": "new",
                      "type": "10",
                      "typeName": "XcmWeight",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": [
                    "Overwrites the speed to which the available weight approaches the maximum weight.",
                    "A lower number results in a faster progression. A value of 1 makes the entire weight available initially.",
                    "",
                    "- `origin`: Must pass `Root`.",
                    "- `new`: Desired value for `QueueConfigData.weight_restrict_decay`."
                  ]
                },
                {
                  "name": "update_xcmp_max_individual_weight",
                  "fields": [
                    {
                      "name": "new",
                      "type": "10",
                      "typeName": "XcmWeight",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": [
                    "Overwrite the maximum amount of weight any individual message may consume.",
                    "Messages above this weight go into the overweight queue and may only be serviced explicitly.",
                    "",
                    "- `origin`: Must pass `Root`.",
                    "- `new`: Desired value for `QueueConfigData.xcmp_max_individual_weight`."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "193",
        "type": {
          "path": [
            "cumulus_pallet_xcmp_queue",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "FailedToSend",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Failed to send XCM message."
                  ]
                },
                {
                  "name": "BadXcmOrigin",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Bad XCM origin."
                  ]
                },
                {
                  "name": "BadXcm",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "Bad XCM data."
                  ]
                },
                {
                  "name": "BadOverweightIndex",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "Bad overweight index."
                  ]
                },
                {
                  "name": "WeightOverLimit",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "Provided weight is possibly not enough to execute the message."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "194",
        "type": {
          "path": [
            "pallet_xcm",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "send",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "message",
                      "type": "195",
                      "typeName": "Box<VersionedXcm<()>>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "teleport_assets",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "type": "73",
                      "typeName": "Box<VersionedMultiAssets>",
                      "docs": []
                    },
                    {
                      "name": "fee_asset_item",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "Teleport some assets from the local chain to some destination chain.",
                    "",
                    "Fee payment on the destination side is made from the asset in the `assets` vector of",
                    "index `fee_asset_item`. The weight limit for fees is not provided and thus is unlimited,",
                    "with all fees taken as needed from the asset.",
                    "",
                    "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                    "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                    "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                    "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                    "  an `AccountId32` value.",
                    "- `assets`: The assets to be withdrawn. The first item should be the currency used to to pay the fee on the",
                    "  `dest` side. May not be empty.",
                    "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                    "  fees."
                  ]
                },
                {
                  "name": "reserve_transfer_assets",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "type": "73",
                      "typeName": "Box<VersionedMultiAssets>",
                      "docs": []
                    },
                    {
                      "name": "fee_asset_item",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": [
                    "Transfer some assets from the local chain to the sovereign account of a destination",
                    "chain and forward a notification XCM.",
                    "",
                    "Fee payment on the destination side is made from the asset in the `assets` vector of",
                    "index `fee_asset_item`. The weight limit for fees is not provided and thus is unlimited,",
                    "with all fees taken as needed from the asset.",
                    "",
                    "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                    "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                    "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                    "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                    "  an `AccountId32` value.",
                    "- `assets`: The assets to be withdrawn. This should include the assets used to pay the fee on the",
                    "  `dest` side.",
                    "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                    "  fees."
                  ]
                },
                {
                  "name": "execute",
                  "fields": [
                    {
                      "name": "message",
                      "type": "206",
                      "typeName": "Box<VersionedXcm<<T as SysConfig>::RuntimeCall>>",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "type": "10",
                      "typeName": "XcmWeight",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": [
                    "Execute an XCM message from a local, signed, origin.",
                    "",
                    "An event is deposited indicating whether `msg` could be executed completely or only",
                    "partially.",
                    "",
                    "No more than `max_weight` will be used in its attempted execution. If this is less than the",
                    "maximum amount of weight that the message could take to be executed, then no execution",
                    "attempt will be made.",
                    "",
                    "NOTE: A successful return to this does *not* imply that the `msg` was executed successfully",
                    "to completion; only that *some* of it was executed."
                  ]
                },
                {
                  "name": "force_xcm_version",
                  "fields": [
                    {
                      "name": "location",
                      "type": "42",
                      "typeName": "Box<MultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "xcm_version",
                      "type": "4",
                      "typeName": "XcmVersion",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": [
                    "Extoll that a particular destination can be communicated with through a particular",
                    "version of XCM.",
                    "",
                    "- `origin`: Must be Root.",
                    "- `location`: The destination that is being described.",
                    "- `xcm_version`: The latest version of XCM that `location` supports."
                  ]
                },
                {
                  "name": "force_default_xcm_version",
                  "fields": [
                    {
                      "name": "maybe_xcm_version",
                      "type": "219",
                      "typeName": "Option<XcmVersion>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": [
                    "Set a safe XCM version (the version that XCM should be encoded with if the most recent",
                    "version a destination can accept is unknown).",
                    "",
                    "- `origin`: Must be Root.",
                    "- `maybe_xcm_version`: The default XCM encoding version, or `None` to disable."
                  ]
                },
                {
                  "name": "force_subscribe_version_notify",
                  "fields": [
                    {
                      "name": "location",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": [
                    "Ask a location to notify us regarding their XCM version and any changes to it.",
                    "",
                    "- `origin`: Must be Root.",
                    "- `location`: The location to which we should subscribe for XCM version notifications."
                  ]
                },
                {
                  "name": "force_unsubscribe_version_notify",
                  "fields": [
                    {
                      "name": "location",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": [
                    "Require that a particular destination should no longer notify us regarding any XCM",
                    "version changes.",
                    "",
                    "- `origin`: Must be Root.",
                    "- `location`: The location to which we are currently subscribed for XCM version",
                    "  notifications which we no longer desire."
                  ]
                },
                {
                  "name": "limited_reserve_transfer_assets",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "type": "73",
                      "typeName": "Box<VersionedMultiAssets>",
                      "docs": []
                    },
                    {
                      "name": "fee_asset_item",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "type": "71",
                      "typeName": "WeightLimit",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": [
                    "Transfer some assets from the local chain to the sovereign account of a destination",
                    "chain and forward a notification XCM.",
                    "",
                    "Fee payment on the destination side is made from the asset in the `assets` vector of",
                    "index `fee_asset_item`, up to enough to pay for `weight_limit` of weight. If more weight",
                    "is needed than `weight_limit`, then the operation will fail and the assets send may be",
                    "at risk.",
                    "",
                    "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                    "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                    "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                    "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                    "  an `AccountId32` value.",
                    "- `assets`: The assets to be withdrawn. This should include the assets used to pay the fee on the",
                    "  `dest` side.",
                    "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                    "  fees.",
                    "- `weight_limit`: The remote-side weight limit, if any, for the XCM fee purchase."
                  ]
                },
                {
                  "name": "limited_teleport_assets",
                  "fields": [
                    {
                      "name": "dest",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "78",
                      "typeName": "Box<VersionedMultiLocation>",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "type": "73",
                      "typeName": "Box<VersionedMultiAssets>",
                      "docs": []
                    },
                    {
                      "name": "fee_asset_item",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "type": "71",
                      "typeName": "WeightLimit",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": [
                    "Teleport some assets from the local chain to some destination chain.",
                    "",
                    "Fee payment on the destination side is made from the asset in the `assets` vector of",
                    "index `fee_asset_item`, up to enough to pay for `weight_limit` of weight. If more weight",
                    "is needed than `weight_limit`, then the operation will fail and the assets send may be",
                    "at risk.",
                    "",
                    "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                    "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                    "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                    "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                    "  an `AccountId32` value.",
                    "- `assets`: The assets to be withdrawn. The first item should be the currency used to to pay the fee on the",
                    "  `dest` side. May not be empty.",
                    "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                    "  fees.",
                    "- `weight_limit`: The remote-side weight limit, if any, for the XCM fee purchase."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "195",
        "type": {
          "path": [
            "xcm",
            "VersionedXcm"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "V0",
                  "fields": [
                    {
                      "name": null,
                      "type": "196",
                      "typeName": "v0::Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "V1",
                  "fields": [
                    {
                      "name": null,
                      "type": "201",
                      "typeName": "v1::Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "V2",
                  "fields": [
                    {
                      "name": null,
                      "type": "52",
                      "typeName": "v2::Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "196",
        "type": {
          "path": [
            "xcm",
            "v0",
            "Xcm"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "WithdrawAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "ReserveAssetDeposit",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "TeleportAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "QueryResponse",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "type": "200",
                      "typeName": "Response",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "TransferAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "TransferReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Transact",
                  "fields": [
                    {
                      "name": "origin_type",
                      "type": "66",
                      "typeName": "OriginKind",
                      "docs": []
                    },
                    {
                      "name": "require_weight_at_most",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": "67",
                      "typeName": "DoubleEncoded<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "HrmpNewChannelOpenRequest",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "HrmpChannelAccepted",
                  "fields": [
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "HrmpChannelClosing",
                  "fields": [
                    {
                      "name": "initiator",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "RelayedFrom",
                  "fields": [
                    {
                      "name": "who",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "message",
                      "type": "196",
                      "typeName": "alloc::boxed::Box<Xcm<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "197",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "198"
            }
          },
          "docs": []
        }
      },
      {
        "id": "198",
        "type": {
          "path": [
            "xcm",
            "v0",
            "order",
            "Order"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Null",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "DepositAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "DepositReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "ExchangeAsset",
                  "fields": [
                    {
                      "name": "give",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "receive",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "InitiateReserveWithdraw",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "reserve",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "InitiateTeleport",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "QueryHolding",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "BuyExecution",
                  "fields": [
                    {
                      "name": "fees",
                      "type": "75",
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "debt",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "halt_on_error",
                      "type": "91",
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "type": "199",
                      "typeName": "Vec<Xcm<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "199",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "196"
            }
          },
          "docs": []
        }
      },
      {
        "id": "200",
        "type": {
          "path": [
            "xcm",
            "v0",
            "Response"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Assets",
                  "fields": [
                    {
                      "name": null,
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "201",
        "type": {
          "path": [
            "xcm",
            "v1",
            "Xcm"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "WithdrawAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "ReserveAssetDeposited",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "ReceiveTeleportedAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "QueryResponse",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "type": "205",
                      "typeName": "Response",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "TransferAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "TransferReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Transact",
                  "fields": [
                    {
                      "name": "origin_type",
                      "type": "66",
                      "typeName": "OriginKind",
                      "docs": []
                    },
                    {
                      "name": "require_weight_at_most",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": "67",
                      "typeName": "DoubleEncoded<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "HrmpNewChannelOpenRequest",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "HrmpChannelAccepted",
                  "fields": [
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "HrmpChannelClosing",
                  "fields": [
                    {
                      "name": "initiator",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "RelayedFrom",
                  "fields": [
                    {
                      "name": "who",
                      "type": "43",
                      "typeName": "InteriorMultiLocation",
                      "docs": []
                    },
                    {
                      "name": "message",
                      "type": "201",
                      "typeName": "alloc::boxed::Box<Xcm<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "SubscribeVersion",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "11",
                  "docs": []
                },
                {
                  "name": "UnsubscribeVersion",
                  "fields": [],
                  "index": "12",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "202",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "203"
            }
          },
          "docs": []
        }
      },
      {
        "id": "203",
        "type": {
          "path": [
            "xcm",
            "v1",
            "order",
            "Order"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Noop",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "DepositAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "DepositReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "ExchangeAsset",
                  "fields": [
                    {
                      "name": "give",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "receive",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "InitiateReserveWithdraw",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "reserve",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "InitiateTeleport",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "QueryHolding",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "BuyExecution",
                  "fields": [
                    {
                      "name": "fees",
                      "type": "57",
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "debt",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "halt_on_error",
                      "type": "91",
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "instructions",
                      "type": "204",
                      "typeName": "Vec<Xcm<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "204",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "201"
            }
          },
          "docs": []
        }
      },
      {
        "id": "205",
        "type": {
          "path": [
            "xcm",
            "v1",
            "Response"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Assets",
                  "fields": [
                    {
                      "name": null,
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Version",
                  "fields": [
                    {
                      "name": null,
                      "type": "4",
                      "typeName": "super::Version",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "206",
        "type": {
          "path": [
            "xcm",
            "VersionedXcm"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "V0",
                  "fields": [
                    {
                      "name": null,
                      "type": "207",
                      "typeName": "v0::Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "V1",
                  "fields": [
                    {
                      "name": null,
                      "type": "212",
                      "typeName": "v1::Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "V2",
                  "fields": [
                    {
                      "name": null,
                      "type": "216",
                      "typeName": "v2::Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "207",
        "type": {
          "path": [
            "xcm",
            "v0",
            "Xcm"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "WithdrawAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "208",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "ReserveAssetDeposit",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "208",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "TeleportAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "208",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "QueryResponse",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "type": "200",
                      "typeName": "Response",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "TransferAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "TransferReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Transact",
                  "fields": [
                    {
                      "name": "origin_type",
                      "type": "66",
                      "typeName": "OriginKind",
                      "docs": []
                    },
                    {
                      "name": "require_weight_at_most",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": "211",
                      "typeName": "DoubleEncoded<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "HrmpNewChannelOpenRequest",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "HrmpChannelAccepted",
                  "fields": [
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "HrmpChannelClosing",
                  "fields": [
                    {
                      "name": "initiator",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "RelayedFrom",
                  "fields": [
                    {
                      "name": "who",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "message",
                      "type": "207",
                      "typeName": "alloc::boxed::Box<Xcm<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "208",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "209"
            }
          },
          "docs": []
        }
      },
      {
        "id": "209",
        "type": {
          "path": [
            "xcm",
            "v0",
            "order",
            "Order"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Null",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "DepositAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "DepositReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "ExchangeAsset",
                  "fields": [
                    {
                      "name": "give",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "receive",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "InitiateReserveWithdraw",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "reserve",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "InitiateTeleport",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "197",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "QueryHolding",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "76",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "type": "74",
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "BuyExecution",
                  "fields": [
                    {
                      "name": "fees",
                      "type": "75",
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "debt",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "halt_on_error",
                      "type": "91",
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "type": "210",
                      "typeName": "Vec<Xcm<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "210",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "207"
            }
          },
          "docs": []
        }
      },
      {
        "id": "211",
        "type": {
          "path": [
            "xcm",
            "double_encoded",
            "DoubleEncoded"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "encoded",
                  "type": "12",
                  "typeName": "Vec<u8>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "212",
        "type": {
          "path": [
            "xcm",
            "v1",
            "Xcm"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "WithdrawAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "213",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "ReserveAssetDeposited",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "213",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "ReceiveTeleportedAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "213",
                      "typeName": "Vec<Order<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "QueryResponse",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "type": "205",
                      "typeName": "Response",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "TransferAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "TransferReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Transact",
                  "fields": [
                    {
                      "name": "origin_type",
                      "type": "66",
                      "typeName": "OriginKind",
                      "docs": []
                    },
                    {
                      "name": "require_weight_at_most",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": "211",
                      "typeName": "DoubleEncoded<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "HrmpNewChannelOpenRequest",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "HrmpChannelAccepted",
                  "fields": [
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "HrmpChannelClosing",
                  "fields": [
                    {
                      "name": "initiator",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "RelayedFrom",
                  "fields": [
                    {
                      "name": "who",
                      "type": "43",
                      "typeName": "InteriorMultiLocation",
                      "docs": []
                    },
                    {
                      "name": "message",
                      "type": "212",
                      "typeName": "alloc::boxed::Box<Xcm<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "SubscribeVersion",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "11",
                  "docs": []
                },
                {
                  "name": "UnsubscribeVersion",
                  "fields": [],
                  "index": "12",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "213",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "214"
            }
          },
          "docs": []
        }
      },
      {
        "id": "214",
        "type": {
          "path": [
            "xcm",
            "v1",
            "order",
            "Order"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Noop",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "DepositAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "DepositReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "type": "4",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "ExchangeAsset",
                  "fields": [
                    {
                      "name": "give",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "receive",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "InitiateReserveWithdraw",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "reserve",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "InitiateTeleport",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "effects",
                      "type": "202",
                      "typeName": "Vec<Order<()>>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "QueryHolding",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "BuyExecution",
                  "fields": [
                    {
                      "name": "fees",
                      "type": "57",
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "debt",
                      "type": "10",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "halt_on_error",
                      "type": "91",
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "instructions",
                      "type": "215",
                      "typeName": "Vec<Xcm<RuntimeCall>>",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "215",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "212"
            }
          },
          "docs": []
        }
      },
      {
        "id": "216",
        "type": {
          "path": [
            "xcm",
            "v2",
            "Xcm"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "217",
                  "typeName": "Vec<Instruction<RuntimeCall>>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "217",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "218"
            }
          },
          "docs": []
        }
      },
      {
        "id": "218",
        "type": {
          "path": [
            "xcm",
            "v2",
            "Instruction"
          ],
          "params": [
            {
              "name": "RuntimeCall",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "WithdrawAsset",
                  "fields": [
                    {
                      "name": null,
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "ReserveAssetDeposited",
                  "fields": [
                    {
                      "name": null,
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "ReceiveTeleportedAsset",
                  "fields": [
                    {
                      "name": null,
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "QueryResponse",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "response",
                      "type": "63",
                      "typeName": "Response",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "TransferAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "TransferReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "type": "52",
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Transact",
                  "fields": [
                    {
                      "name": "origin_type",
                      "type": "66",
                      "typeName": "OriginKind",
                      "docs": []
                    },
                    {
                      "name": "require_weight_at_most",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": "211",
                      "typeName": "DoubleEncoded<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "HrmpNewChannelOpenRequest",
                  "fields": [
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "HrmpChannelAccepted",
                  "fields": [
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "HrmpChannelClosing",
                  "fields": [
                    {
                      "name": "initiator",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sender",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "ClearOrigin",
                  "fields": [],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "DescendOrigin",
                  "fields": [
                    {
                      "name": null,
                      "type": "43",
                      "typeName": "InteriorMultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "11",
                  "docs": []
                },
                {
                  "name": "ReportError",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "12",
                  "docs": []
                },
                {
                  "name": "DepositAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "13",
                  "docs": []
                },
                {
                  "name": "DepositReserveAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_assets",
                      "type": "45",
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "type": "52",
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": "14",
                  "docs": []
                },
                {
                  "name": "ExchangeAsset",
                  "fields": [
                    {
                      "name": "give",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "receive",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    }
                  ],
                  "index": "15",
                  "docs": []
                },
                {
                  "name": "InitiateReserveWithdraw",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "reserve",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "type": "52",
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": "16",
                  "docs": []
                },
                {
                  "name": "InitiateTeleport",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "xcm",
                      "type": "52",
                      "typeName": "Xcm<()>",
                      "docs": []
                    }
                  ],
                  "index": "17",
                  "docs": []
                },
                {
                  "name": "QueryHolding",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "dest",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "assets",
                      "type": "68",
                      "typeName": "MultiAssetFilter",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "18",
                  "docs": []
                },
                {
                  "name": "BuyExecution",
                  "fields": [
                    {
                      "name": "fees",
                      "type": "57",
                      "typeName": "MultiAsset",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "type": "71",
                      "typeName": "WeightLimit",
                      "docs": []
                    }
                  ],
                  "index": "19",
                  "docs": []
                },
                {
                  "name": "RefundSurplus",
                  "fields": [],
                  "index": "20",
                  "docs": []
                },
                {
                  "name": "SetErrorHandler",
                  "fields": [
                    {
                      "name": null,
                      "type": "216",
                      "typeName": "Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "21",
                  "docs": []
                },
                {
                  "name": "SetAppendix",
                  "fields": [
                    {
                      "name": null,
                      "type": "216",
                      "typeName": "Xcm<RuntimeCall>",
                      "docs": []
                    }
                  ],
                  "index": "22",
                  "docs": []
                },
                {
                  "name": "ClearError",
                  "fields": [],
                  "index": "23",
                  "docs": []
                },
                {
                  "name": "ClaimAsset",
                  "fields": [
                    {
                      "name": "assets",
                      "type": "55",
                      "typeName": "MultiAssets",
                      "docs": []
                    },
                    {
                      "name": "ticket",
                      "type": "42",
                      "typeName": "MultiLocation",
                      "docs": []
                    }
                  ],
                  "index": "24",
                  "docs": []
                },
                {
                  "name": "Trap",
                  "fields": [
                    {
                      "name": null,
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "25",
                  "docs": []
                },
                {
                  "name": "SubscribeVersion",
                  "fields": [
                    {
                      "name": "query_id",
                      "type": "9",
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "max_response_weight",
                      "type": "9",
                      "typeName": "u64",
                      "docs": []
                    }
                  ],
                  "index": "26",
                  "docs": []
                },
                {
                  "name": "UnsubscribeVersion",
                  "fields": [],
                  "index": "27",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "219",
        "type": {
          "path": [
            "Option"
          ],
          "params": [
            {
              "name": "T",
              "type": "4"
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "None",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Some",
                  "fields": [
                    {
                      "name": null,
                      "type": "4",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "220",
        "type": {
          "path": [
            "pallet_xcm",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Unreachable",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "The desired destination was unreachable, generally because there is a no way of routing",
                    "to it."
                  ]
                },
                {
                  "name": "SendFailure",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "There was some other issue (i.e. not to do with routing) in sending the message. Perhaps",
                    "a lack of space for buffering the message."
                  ]
                },
                {
                  "name": "Filtered",
                  "fields": [],
                  "index": "2",
                  "docs": [
                    "The message execution fails the filter."
                  ]
                },
                {
                  "name": "UnweighableMessage",
                  "fields": [],
                  "index": "3",
                  "docs": [
                    "The message's weight could not be determined."
                  ]
                },
                {
                  "name": "DestinationNotInvertible",
                  "fields": [],
                  "index": "4",
                  "docs": [
                    "The destination `MultiLocation` provided cannot be inverted."
                  ]
                },
                {
                  "name": "Empty",
                  "fields": [],
                  "index": "5",
                  "docs": [
                    "The assets to be sent are empty."
                  ]
                },
                {
                  "name": "CannotReanchor",
                  "fields": [],
                  "index": "6",
                  "docs": [
                    "Could not re-anchor the assets to declare the fees for the destination chain."
                  ]
                },
                {
                  "name": "TooManyAssets",
                  "fields": [],
                  "index": "7",
                  "docs": [
                    "Too many assets have been attempted for transfer."
                  ]
                },
                {
                  "name": "InvalidOrigin",
                  "fields": [],
                  "index": "8",
                  "docs": [
                    "Origin is invalid for sending."
                  ]
                },
                {
                  "name": "BadVersion",
                  "fields": [],
                  "index": "9",
                  "docs": [
                    "The version of the `Versioned` value used is not able to be interpreted."
                  ]
                },
                {
                  "name": "BadLocation",
                  "fields": [],
                  "index": "10",
                  "docs": [
                    "The given location could not be used (e.g. because it cannot be expressed in the",
                    "desired version of XCM)."
                  ]
                },
                {
                  "name": "NoSubscription",
                  "fields": [],
                  "index": "11",
                  "docs": [
                    "The referenced subscription could not be found."
                  ]
                },
                {
                  "name": "AlreadySubscribed",
                  "fields": [],
                  "index": "12",
                  "docs": [
                    "The location is invalid since it already has a subscription from us."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "221",
        "type": {
          "path": [
            "cumulus_pallet_xcm",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": []
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "222",
        "type": {
          "path": [
            "cumulus_pallet_dmp_queue",
            "ConfigData"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "max_individual",
                  "type": "8",
                  "typeName": "Weight",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "223",
        "type": {
          "path": [
            "cumulus_pallet_dmp_queue",
            "PageIndexData"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": "begin_used",
                  "type": "4",
                  "typeName": "PageCounter",
                  "docs": []
                },
                {
                  "name": "end_used",
                  "type": "4",
                  "typeName": "PageCounter",
                  "docs": []
                },
                {
                  "name": "overweight_count",
                  "type": "10",
                  "typeName": "OverweightIndex",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "224",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "225"
            }
          },
          "docs": []
        }
      },
      {
        "id": "225",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "4",
              "12"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "226",
        "type": {
          "path": [
            "cumulus_pallet_dmp_queue",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "service_overweight",
                  "fields": [
                    {
                      "name": "index",
                      "type": "10",
                      "typeName": "OverweightIndex",
                      "docs": []
                    },
                    {
                      "name": "weight_limit",
                      "type": "10",
                      "typeName": "XcmWeight",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "Service a single overweight message.",
                    "",
                    "- `origin`: Must pass `ExecuteOverweightOrigin`.",
                    "- `index`: The index of the overweight message to service.",
                    "- `weight_limit`: The amount of weight that message execution may take.",
                    "",
                    "Errors:",
                    "- `Unknown`: Message of `index` is unknown.",
                    "- `OverLimit`: Message execution may use greater than `weight_limit`.",
                    "",
                    "Events:",
                    "- `OverweightServiced`: On success."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "227",
        "type": {
          "path": [
            "cumulus_pallet_dmp_queue",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Unknown",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "The message index given is unknown."
                  ]
                },
                {
                  "name": "OverLimit",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "The amount of weight given is possibly not enough for executing the message."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "228",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "0",
              "82"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "229",
        "type": {
          "path": [
            "sp_core",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "230"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "231",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "230",
        "type": {
          "path": [
            "sp_core",
            "bounded",
            "bounded_vec",
            "BoundedVec"
          ],
          "params": [
            {
              "name": "T",
              "type": "2"
            },
            {
              "name": "S",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "12",
                  "typeName": "Vec<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "231",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Sequence": {
              "type": "230"
            }
          },
          "docs": []
        }
      },
      {
        "id": "232",
        "type": {
          "path": [
            "pallet_registry",
            "pallet",
            "Call"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "reg_feed",
                  "fields": [
                    {
                      "name": "key",
                      "type": "82",
                      "typeName": "RegStrT",
                      "docs": []
                    },
                    {
                      "name": "url",
                      "type": "82",
                      "typeName": "RegStrT",
                      "docs": []
                    },
                    {
                      "name": "vpath",
                      "type": "82",
                      "typeName": "RegStrT",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": [
                    "An example dispatchable that takes a singles value as a parameter, writes the value to",
                    "storage and emits an event. This function must be dispatched by a signed extrinsic."
                  ]
                },
                {
                  "name": "unreg_feed",
                  "fields": [
                    {
                      "name": "key",
                      "type": "82",
                      "typeName": "RegStrT",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": [
                    "An example dispatchable that may throw a custom error."
                  ]
                }
              ]
            }
          },
          "docs": [
            "Contains one variant per dispatchable that can be called by an extrinsic."
          ]
        }
      },
      {
        "id": "233",
        "type": {
          "path": [
            "pallet_registry",
            "pallet",
            "Error"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "NoneValue",
                  "fields": [],
                  "index": "0",
                  "docs": [
                    "Error names should be descriptive."
                  ]
                },
                {
                  "name": "StorageOverflow",
                  "fields": [],
                  "index": "1",
                  "docs": [
                    "Errors should have helpful documentation associated with them."
                  ]
                }
              ]
            }
          },
          "docs": [
            "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)\n\t\t\tof this pallet.\n\t\t\t"
          ]
        }
      },
      {
        "id": "234",
        "type": {
          "path": [
            "sp_runtime",
            "generic",
            "unchecked_extrinsic",
            "UncheckedExtrinsic"
          ],
          "params": [
            {
              "name": "Address",
              "type": "145"
            },
            {
              "name": "Call",
              "type": "235"
            },
            {
              "name": "Signature",
              "type": "236"
            },
            {
              "name": "Extra",
              "type": "242"
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "12",
                  "typeName": null,
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "235",
        "type": {
          "path": [
            "paraxiom_runtime",
            "RuntimeCall"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "System",
                  "fields": [
                    {
                      "name": null,
                      "type": "92",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "ParachainSystem",
                  "fields": [
                    {
                      "name": null,
                      "type": "126",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainSystem, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Timestamp",
                  "fields": [
                    {
                      "name": null,
                      "type": "136",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Balances",
                  "fields": [
                    {
                      "name": null,
                      "type": "144",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "Authorship",
                  "fields": [
                    {
                      "name": null,
                      "type": "155",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Authorship, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "20",
                  "docs": []
                },
                {
                  "name": "CollatorSelection",
                  "fields": [
                    {
                      "name": null,
                      "type": "164",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CollatorSelection, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "21",
                  "docs": []
                },
                {
                  "name": "Session",
                  "fields": [
                    {
                      "name": null,
                      "type": "174",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "22",
                  "docs": []
                },
                {
                  "name": "XcmpQueue",
                  "fields": [
                    {
                      "name": null,
                      "type": "192",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmpQueue, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "30",
                  "docs": []
                },
                {
                  "name": "PolkadotXcm",
                  "fields": [
                    {
                      "name": null,
                      "type": "194",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotXcm, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "31",
                  "docs": []
                },
                {
                  "name": "DmpQueue",
                  "fields": [
                    {
                      "name": null,
                      "type": "226",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DmpQueue, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "33",
                  "docs": []
                },
                {
                  "name": "RegistryPallet",
                  "fields": [
                    {
                      "name": null,
                      "type": "232",
                      "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RegistryPallet, Runtime>",
                      "docs": []
                    }
                  ],
                  "index": "40",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "236",
        "type": {
          "path": [
            "sp_runtime",
            "MultiSignature"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Ed25519",
                  "fields": [
                    {
                      "name": null,
                      "type": "237",
                      "typeName": "ed25519::Signature",
                      "docs": []
                    }
                  ],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Sr25519",
                  "fields": [
                    {
                      "name": null,
                      "type": "239",
                      "typeName": "sr25519::Signature",
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Ecdsa",
                  "fields": [
                    {
                      "name": null,
                      "type": "240",
                      "typeName": "ecdsa::Signature",
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "237",
        "type": {
          "path": [
            "sp_core",
            "ed25519",
            "Signature"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "238",
                  "typeName": "[u8; 64]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "238",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "64",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "239",
        "type": {
          "path": [
            "sp_core",
            "sr25519",
            "Signature"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "238",
                  "typeName": "[u8; 64]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "240",
        "type": {
          "path": [
            "sp_core",
            "ecdsa",
            "Signature"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "241",
                  "typeName": "[u8; 65]",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "241",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Array": {
              "len": "65",
              "type": "2"
            }
          },
          "docs": []
        }
      },
      {
        "id": "242",
        "type": {
          "path": [],
          "params": [],
          "def": {
            "Tuple": [
              "243",
              "244",
              "245",
              "246",
              "247",
              "249",
              "250",
              "251"
            ]
          },
          "docs": []
        }
      },
      {
        "id": "243",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_non_zero_sender",
            "CheckNonZeroSender"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "244",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_spec_version",
            "CheckSpecVersion"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "245",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_tx_version",
            "CheckTxVersion"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "246",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_genesis",
            "CheckGenesis"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "247",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_mortality",
            "CheckMortality"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "248",
                  "typeName": "Era",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "248",
        "type": {
          "path": [
            "sp_runtime",
            "generic",
            "era",
            "Era"
          ],
          "params": [],
          "def": {
            "Variant": {
              "variants": [
                {
                  "name": "Immortal",
                  "fields": [],
                  "index": "0",
                  "docs": []
                },
                {
                  "name": "Mortal1",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "1",
                  "docs": []
                },
                {
                  "name": "Mortal2",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "2",
                  "docs": []
                },
                {
                  "name": "Mortal3",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "3",
                  "docs": []
                },
                {
                  "name": "Mortal4",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "4",
                  "docs": []
                },
                {
                  "name": "Mortal5",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "5",
                  "docs": []
                },
                {
                  "name": "Mortal6",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "6",
                  "docs": []
                },
                {
                  "name": "Mortal7",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "7",
                  "docs": []
                },
                {
                  "name": "Mortal8",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "8",
                  "docs": []
                },
                {
                  "name": "Mortal9",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "9",
                  "docs": []
                },
                {
                  "name": "Mortal10",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "10",
                  "docs": []
                },
                {
                  "name": "Mortal11",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "11",
                  "docs": []
                },
                {
                  "name": "Mortal12",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "12",
                  "docs": []
                },
                {
                  "name": "Mortal13",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "13",
                  "docs": []
                },
                {
                  "name": "Mortal14",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "14",
                  "docs": []
                },
                {
                  "name": "Mortal15",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "15",
                  "docs": []
                },
                {
                  "name": "Mortal16",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "16",
                  "docs": []
                },
                {
                  "name": "Mortal17",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "17",
                  "docs": []
                },
                {
                  "name": "Mortal18",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "18",
                  "docs": []
                },
                {
                  "name": "Mortal19",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "19",
                  "docs": []
                },
                {
                  "name": "Mortal20",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "20",
                  "docs": []
                },
                {
                  "name": "Mortal21",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "21",
                  "docs": []
                },
                {
                  "name": "Mortal22",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "22",
                  "docs": []
                },
                {
                  "name": "Mortal23",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "23",
                  "docs": []
                },
                {
                  "name": "Mortal24",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "24",
                  "docs": []
                },
                {
                  "name": "Mortal25",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "25",
                  "docs": []
                },
                {
                  "name": "Mortal26",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "26",
                  "docs": []
                },
                {
                  "name": "Mortal27",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "27",
                  "docs": []
                },
                {
                  "name": "Mortal28",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "28",
                  "docs": []
                },
                {
                  "name": "Mortal29",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "29",
                  "docs": []
                },
                {
                  "name": "Mortal30",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "30",
                  "docs": []
                },
                {
                  "name": "Mortal31",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "31",
                  "docs": []
                },
                {
                  "name": "Mortal32",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "32",
                  "docs": []
                },
                {
                  "name": "Mortal33",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "33",
                  "docs": []
                },
                {
                  "name": "Mortal34",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "34",
                  "docs": []
                },
                {
                  "name": "Mortal35",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "35",
                  "docs": []
                },
                {
                  "name": "Mortal36",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "36",
                  "docs": []
                },
                {
                  "name": "Mortal37",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "37",
                  "docs": []
                },
                {
                  "name": "Mortal38",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "38",
                  "docs": []
                },
                {
                  "name": "Mortal39",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "39",
                  "docs": []
                },
                {
                  "name": "Mortal40",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "40",
                  "docs": []
                },
                {
                  "name": "Mortal41",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "41",
                  "docs": []
                },
                {
                  "name": "Mortal42",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "42",
                  "docs": []
                },
                {
                  "name": "Mortal43",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "43",
                  "docs": []
                },
                {
                  "name": "Mortal44",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "44",
                  "docs": []
                },
                {
                  "name": "Mortal45",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "45",
                  "docs": []
                },
                {
                  "name": "Mortal46",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "46",
                  "docs": []
                },
                {
                  "name": "Mortal47",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "47",
                  "docs": []
                },
                {
                  "name": "Mortal48",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "48",
                  "docs": []
                },
                {
                  "name": "Mortal49",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "49",
                  "docs": []
                },
                {
                  "name": "Mortal50",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "50",
                  "docs": []
                },
                {
                  "name": "Mortal51",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "51",
                  "docs": []
                },
                {
                  "name": "Mortal52",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "52",
                  "docs": []
                },
                {
                  "name": "Mortal53",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "53",
                  "docs": []
                },
                {
                  "name": "Mortal54",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "54",
                  "docs": []
                },
                {
                  "name": "Mortal55",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "55",
                  "docs": []
                },
                {
                  "name": "Mortal56",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "56",
                  "docs": []
                },
                {
                  "name": "Mortal57",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "57",
                  "docs": []
                },
                {
                  "name": "Mortal58",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "58",
                  "docs": []
                },
                {
                  "name": "Mortal59",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "59",
                  "docs": []
                },
                {
                  "name": "Mortal60",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "60",
                  "docs": []
                },
                {
                  "name": "Mortal61",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "61",
                  "docs": []
                },
                {
                  "name": "Mortal62",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "62",
                  "docs": []
                },
                {
                  "name": "Mortal63",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "63",
                  "docs": []
                },
                {
                  "name": "Mortal64",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "64",
                  "docs": []
                },
                {
                  "name": "Mortal65",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "65",
                  "docs": []
                },
                {
                  "name": "Mortal66",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "66",
                  "docs": []
                },
                {
                  "name": "Mortal67",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "67",
                  "docs": []
                },
                {
                  "name": "Mortal68",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "68",
                  "docs": []
                },
                {
                  "name": "Mortal69",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "69",
                  "docs": []
                },
                {
                  "name": "Mortal70",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "70",
                  "docs": []
                },
                {
                  "name": "Mortal71",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "71",
                  "docs": []
                },
                {
                  "name": "Mortal72",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "72",
                  "docs": []
                },
                {
                  "name": "Mortal73",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "73",
                  "docs": []
                },
                {
                  "name": "Mortal74",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "74",
                  "docs": []
                },
                {
                  "name": "Mortal75",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "75",
                  "docs": []
                },
                {
                  "name": "Mortal76",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "76",
                  "docs": []
                },
                {
                  "name": "Mortal77",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "77",
                  "docs": []
                },
                {
                  "name": "Mortal78",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "78",
                  "docs": []
                },
                {
                  "name": "Mortal79",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "79",
                  "docs": []
                },
                {
                  "name": "Mortal80",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "80",
                  "docs": []
                },
                {
                  "name": "Mortal81",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "81",
                  "docs": []
                },
                {
                  "name": "Mortal82",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "82",
                  "docs": []
                },
                {
                  "name": "Mortal83",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "83",
                  "docs": []
                },
                {
                  "name": "Mortal84",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "84",
                  "docs": []
                },
                {
                  "name": "Mortal85",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "85",
                  "docs": []
                },
                {
                  "name": "Mortal86",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "86",
                  "docs": []
                },
                {
                  "name": "Mortal87",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "87",
                  "docs": []
                },
                {
                  "name": "Mortal88",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "88",
                  "docs": []
                },
                {
                  "name": "Mortal89",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "89",
                  "docs": []
                },
                {
                  "name": "Mortal90",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "90",
                  "docs": []
                },
                {
                  "name": "Mortal91",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "91",
                  "docs": []
                },
                {
                  "name": "Mortal92",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "92",
                  "docs": []
                },
                {
                  "name": "Mortal93",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "93",
                  "docs": []
                },
                {
                  "name": "Mortal94",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "94",
                  "docs": []
                },
                {
                  "name": "Mortal95",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "95",
                  "docs": []
                },
                {
                  "name": "Mortal96",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "96",
                  "docs": []
                },
                {
                  "name": "Mortal97",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "97",
                  "docs": []
                },
                {
                  "name": "Mortal98",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "98",
                  "docs": []
                },
                {
                  "name": "Mortal99",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "99",
                  "docs": []
                },
                {
                  "name": "Mortal100",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "100",
                  "docs": []
                },
                {
                  "name": "Mortal101",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "101",
                  "docs": []
                },
                {
                  "name": "Mortal102",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "102",
                  "docs": []
                },
                {
                  "name": "Mortal103",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "103",
                  "docs": []
                },
                {
                  "name": "Mortal104",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "104",
                  "docs": []
                },
                {
                  "name": "Mortal105",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "105",
                  "docs": []
                },
                {
                  "name": "Mortal106",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "106",
                  "docs": []
                },
                {
                  "name": "Mortal107",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "107",
                  "docs": []
                },
                {
                  "name": "Mortal108",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "108",
                  "docs": []
                },
                {
                  "name": "Mortal109",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "109",
                  "docs": []
                },
                {
                  "name": "Mortal110",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "110",
                  "docs": []
                },
                {
                  "name": "Mortal111",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "111",
                  "docs": []
                },
                {
                  "name": "Mortal112",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "112",
                  "docs": []
                },
                {
                  "name": "Mortal113",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "113",
                  "docs": []
                },
                {
                  "name": "Mortal114",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "114",
                  "docs": []
                },
                {
                  "name": "Mortal115",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "115",
                  "docs": []
                },
                {
                  "name": "Mortal116",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "116",
                  "docs": []
                },
                {
                  "name": "Mortal117",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "117",
                  "docs": []
                },
                {
                  "name": "Mortal118",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "118",
                  "docs": []
                },
                {
                  "name": "Mortal119",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "119",
                  "docs": []
                },
                {
                  "name": "Mortal120",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "120",
                  "docs": []
                },
                {
                  "name": "Mortal121",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "121",
                  "docs": []
                },
                {
                  "name": "Mortal122",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "122",
                  "docs": []
                },
                {
                  "name": "Mortal123",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "123",
                  "docs": []
                },
                {
                  "name": "Mortal124",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "124",
                  "docs": []
                },
                {
                  "name": "Mortal125",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "125",
                  "docs": []
                },
                {
                  "name": "Mortal126",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "126",
                  "docs": []
                },
                {
                  "name": "Mortal127",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "127",
                  "docs": []
                },
                {
                  "name": "Mortal128",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "128",
                  "docs": []
                },
                {
                  "name": "Mortal129",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "129",
                  "docs": []
                },
                {
                  "name": "Mortal130",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "130",
                  "docs": []
                },
                {
                  "name": "Mortal131",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "131",
                  "docs": []
                },
                {
                  "name": "Mortal132",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "132",
                  "docs": []
                },
                {
                  "name": "Mortal133",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "133",
                  "docs": []
                },
                {
                  "name": "Mortal134",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "134",
                  "docs": []
                },
                {
                  "name": "Mortal135",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "135",
                  "docs": []
                },
                {
                  "name": "Mortal136",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "136",
                  "docs": []
                },
                {
                  "name": "Mortal137",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "137",
                  "docs": []
                },
                {
                  "name": "Mortal138",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "138",
                  "docs": []
                },
                {
                  "name": "Mortal139",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "139",
                  "docs": []
                },
                {
                  "name": "Mortal140",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "140",
                  "docs": []
                },
                {
                  "name": "Mortal141",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "141",
                  "docs": []
                },
                {
                  "name": "Mortal142",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "142",
                  "docs": []
                },
                {
                  "name": "Mortal143",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "143",
                  "docs": []
                },
                {
                  "name": "Mortal144",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "144",
                  "docs": []
                },
                {
                  "name": "Mortal145",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "145",
                  "docs": []
                },
                {
                  "name": "Mortal146",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "146",
                  "docs": []
                },
                {
                  "name": "Mortal147",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "147",
                  "docs": []
                },
                {
                  "name": "Mortal148",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "148",
                  "docs": []
                },
                {
                  "name": "Mortal149",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "149",
                  "docs": []
                },
                {
                  "name": "Mortal150",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "150",
                  "docs": []
                },
                {
                  "name": "Mortal151",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "151",
                  "docs": []
                },
                {
                  "name": "Mortal152",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "152",
                  "docs": []
                },
                {
                  "name": "Mortal153",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "153",
                  "docs": []
                },
                {
                  "name": "Mortal154",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "154",
                  "docs": []
                },
                {
                  "name": "Mortal155",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "155",
                  "docs": []
                },
                {
                  "name": "Mortal156",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "156",
                  "docs": []
                },
                {
                  "name": "Mortal157",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "157",
                  "docs": []
                },
                {
                  "name": "Mortal158",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "158",
                  "docs": []
                },
                {
                  "name": "Mortal159",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "159",
                  "docs": []
                },
                {
                  "name": "Mortal160",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "160",
                  "docs": []
                },
                {
                  "name": "Mortal161",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "161",
                  "docs": []
                },
                {
                  "name": "Mortal162",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "162",
                  "docs": []
                },
                {
                  "name": "Mortal163",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "163",
                  "docs": []
                },
                {
                  "name": "Mortal164",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "164",
                  "docs": []
                },
                {
                  "name": "Mortal165",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "165",
                  "docs": []
                },
                {
                  "name": "Mortal166",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "166",
                  "docs": []
                },
                {
                  "name": "Mortal167",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "167",
                  "docs": []
                },
                {
                  "name": "Mortal168",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "168",
                  "docs": []
                },
                {
                  "name": "Mortal169",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "169",
                  "docs": []
                },
                {
                  "name": "Mortal170",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "170",
                  "docs": []
                },
                {
                  "name": "Mortal171",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "171",
                  "docs": []
                },
                {
                  "name": "Mortal172",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "172",
                  "docs": []
                },
                {
                  "name": "Mortal173",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "173",
                  "docs": []
                },
                {
                  "name": "Mortal174",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "174",
                  "docs": []
                },
                {
                  "name": "Mortal175",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "175",
                  "docs": []
                },
                {
                  "name": "Mortal176",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "176",
                  "docs": []
                },
                {
                  "name": "Mortal177",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "177",
                  "docs": []
                },
                {
                  "name": "Mortal178",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "178",
                  "docs": []
                },
                {
                  "name": "Mortal179",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "179",
                  "docs": []
                },
                {
                  "name": "Mortal180",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "180",
                  "docs": []
                },
                {
                  "name": "Mortal181",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "181",
                  "docs": []
                },
                {
                  "name": "Mortal182",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "182",
                  "docs": []
                },
                {
                  "name": "Mortal183",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "183",
                  "docs": []
                },
                {
                  "name": "Mortal184",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "184",
                  "docs": []
                },
                {
                  "name": "Mortal185",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "185",
                  "docs": []
                },
                {
                  "name": "Mortal186",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "186",
                  "docs": []
                },
                {
                  "name": "Mortal187",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "187",
                  "docs": []
                },
                {
                  "name": "Mortal188",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "188",
                  "docs": []
                },
                {
                  "name": "Mortal189",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "189",
                  "docs": []
                },
                {
                  "name": "Mortal190",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "190",
                  "docs": []
                },
                {
                  "name": "Mortal191",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "191",
                  "docs": []
                },
                {
                  "name": "Mortal192",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "192",
                  "docs": []
                },
                {
                  "name": "Mortal193",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "193",
                  "docs": []
                },
                {
                  "name": "Mortal194",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "194",
                  "docs": []
                },
                {
                  "name": "Mortal195",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "195",
                  "docs": []
                },
                {
                  "name": "Mortal196",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "196",
                  "docs": []
                },
                {
                  "name": "Mortal197",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "197",
                  "docs": []
                },
                {
                  "name": "Mortal198",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "198",
                  "docs": []
                },
                {
                  "name": "Mortal199",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "199",
                  "docs": []
                },
                {
                  "name": "Mortal200",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "200",
                  "docs": []
                },
                {
                  "name": "Mortal201",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "201",
                  "docs": []
                },
                {
                  "name": "Mortal202",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "202",
                  "docs": []
                },
                {
                  "name": "Mortal203",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "203",
                  "docs": []
                },
                {
                  "name": "Mortal204",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "204",
                  "docs": []
                },
                {
                  "name": "Mortal205",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "205",
                  "docs": []
                },
                {
                  "name": "Mortal206",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "206",
                  "docs": []
                },
                {
                  "name": "Mortal207",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "207",
                  "docs": []
                },
                {
                  "name": "Mortal208",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "208",
                  "docs": []
                },
                {
                  "name": "Mortal209",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "209",
                  "docs": []
                },
                {
                  "name": "Mortal210",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "210",
                  "docs": []
                },
                {
                  "name": "Mortal211",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "211",
                  "docs": []
                },
                {
                  "name": "Mortal212",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "212",
                  "docs": []
                },
                {
                  "name": "Mortal213",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "213",
                  "docs": []
                },
                {
                  "name": "Mortal214",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "214",
                  "docs": []
                },
                {
                  "name": "Mortal215",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "215",
                  "docs": []
                },
                {
                  "name": "Mortal216",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "216",
                  "docs": []
                },
                {
                  "name": "Mortal217",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "217",
                  "docs": []
                },
                {
                  "name": "Mortal218",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "218",
                  "docs": []
                },
                {
                  "name": "Mortal219",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "219",
                  "docs": []
                },
                {
                  "name": "Mortal220",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "220",
                  "docs": []
                },
                {
                  "name": "Mortal221",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "221",
                  "docs": []
                },
                {
                  "name": "Mortal222",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "222",
                  "docs": []
                },
                {
                  "name": "Mortal223",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "223",
                  "docs": []
                },
                {
                  "name": "Mortal224",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "224",
                  "docs": []
                },
                {
                  "name": "Mortal225",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "225",
                  "docs": []
                },
                {
                  "name": "Mortal226",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "226",
                  "docs": []
                },
                {
                  "name": "Mortal227",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "227",
                  "docs": []
                },
                {
                  "name": "Mortal228",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "228",
                  "docs": []
                },
                {
                  "name": "Mortal229",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "229",
                  "docs": []
                },
                {
                  "name": "Mortal230",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "230",
                  "docs": []
                },
                {
                  "name": "Mortal231",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "231",
                  "docs": []
                },
                {
                  "name": "Mortal232",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "232",
                  "docs": []
                },
                {
                  "name": "Mortal233",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "233",
                  "docs": []
                },
                {
                  "name": "Mortal234",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "234",
                  "docs": []
                },
                {
                  "name": "Mortal235",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "235",
                  "docs": []
                },
                {
                  "name": "Mortal236",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "236",
                  "docs": []
                },
                {
                  "name": "Mortal237",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "237",
                  "docs": []
                },
                {
                  "name": "Mortal238",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "238",
                  "docs": []
                },
                {
                  "name": "Mortal239",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "239",
                  "docs": []
                },
                {
                  "name": "Mortal240",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "240",
                  "docs": []
                },
                {
                  "name": "Mortal241",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "241",
                  "docs": []
                },
                {
                  "name": "Mortal242",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "242",
                  "docs": []
                },
                {
                  "name": "Mortal243",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "243",
                  "docs": []
                },
                {
                  "name": "Mortal244",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "244",
                  "docs": []
                },
                {
                  "name": "Mortal245",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "245",
                  "docs": []
                },
                {
                  "name": "Mortal246",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "246",
                  "docs": []
                },
                {
                  "name": "Mortal247",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "247",
                  "docs": []
                },
                {
                  "name": "Mortal248",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "248",
                  "docs": []
                },
                {
                  "name": "Mortal249",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "249",
                  "docs": []
                },
                {
                  "name": "Mortal250",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "250",
                  "docs": []
                },
                {
                  "name": "Mortal251",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "251",
                  "docs": []
                },
                {
                  "name": "Mortal252",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "252",
                  "docs": []
                },
                {
                  "name": "Mortal253",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "253",
                  "docs": []
                },
                {
                  "name": "Mortal254",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "254",
                  "docs": []
                },
                {
                  "name": "Mortal255",
                  "fields": [
                    {
                      "name": null,
                      "type": "2",
                      "typeName": null,
                      "docs": []
                    }
                  ],
                  "index": "255",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "249",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_nonce",
            "CheckNonce"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "45",
                  "typeName": "T::Index",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "250",
        "type": {
          "path": [
            "frame_system",
            "extensions",
            "check_weight",
            "CheckWeight"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      },
      {
        "id": "251",
        "type": {
          "path": [
            "pallet_transaction_payment",
            "ChargeTransactionPayment"
          ],
          "params": [
            {
              "name": "T",
              "type": null
            }
          ],
          "def": {
            "Composite": {
              "fields": [
                {
                  "name": null,
                  "type": "49",
                  "typeName": "BalanceOf<T>",
                  "docs": []
                }
              ]
            }
          },
          "docs": []
        }
      },
      {
        "id": "252",
        "type": {
          "path": [
            "paraxiom_runtime",
            "Runtime"
          ],
          "params": [],
          "def": {
            "Composite": {
              "fields": []
            }
          },
          "docs": []
        }
      }
    ]
  },
  "pallets": [
    {
      "name": "System",
      "storage": {
        "prefix": "System",
        "items": [
          {
            "name": "Account",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "0",
                "value": "3"
              }
            },
            "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "docs": [
              " The full account information for a particular account ID."
            ]
          },
          {
            "name": "ExtrinsicCount",
            "modifier": "Optional",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00",
            "docs": [
              " Total extrinsics count for the current block."
            ]
          },
          {
            "name": "BlockWeight",
            "modifier": "Default",
            "type": {
              "Plain": "7"
            },
            "fallback": "0x000000000000",
            "docs": [
              " The current weight for the block."
            ]
          },
          {
            "name": "AllExtrinsicsLen",
            "modifier": "Optional",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00",
            "docs": [
              " Total length (in bytes) for all extrinsics put together, for the current block."
            ]
          },
          {
            "name": "BlockHash",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "4",
                "value": "11"
              }
            },
            "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "docs": [
              " Map of block numbers to block hashes."
            ]
          },
          {
            "name": "ExtrinsicData",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "4",
                "value": "12"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Extrinsics data for the current block (maps an extrinsic's index to its data)."
            ]
          },
          {
            "name": "Number",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " The current block number being processed. Set by `execute_block`."
            ]
          },
          {
            "name": "ParentHash",
            "modifier": "Default",
            "type": {
              "Plain": "11"
            },
            "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "docs": [
              " Hash of the previous block."
            ]
          },
          {
            "name": "Digest",
            "modifier": "Default",
            "type": {
              "Plain": "13"
            },
            "fallback": "0x00",
            "docs": [
              " Digest of the current block, also part of the block header."
            ]
          },
          {
            "name": "Events",
            "modifier": "Default",
            "type": {
              "Plain": "17"
            },
            "fallback": "0x00",
            "docs": [
              " Events deposited for the current block.",
              "",
              " NOTE: The item is unbound and should therefore never be read on chain.",
              " It could otherwise inflate the PoV size of a block.",
              "",
              " Events have a large in-memory size. Box the events to not go out-of-memory",
              " just in case someone still reads them from within the runtime."
            ]
          },
          {
            "name": "EventCount",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " The number of events in the `Events<T>` list."
            ]
          },
          {
            "name": "EventTopics",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "11",
                "value": "87"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Mapping between a topic (represented by T::Hash) and a vector of indexes",
              " of events in the `<Events<T>>` list.",
              "",
              " All topic vectors have deterministic storage locations depending on the topic. This",
              " allows light-clients to leverage the changes trie storage tracking mechanism and",
              " in case of changes fetch the list of events of interest.",
              "",
              " The value has the type `(T::BlockNumber, EventIndex)` because if we used only just",
              " the `EventIndex` then in case if the topic has the same contents on the next block",
              " no notification will be triggered thus the event might be lost."
            ]
          },
          {
            "name": "LastRuntimeUpgrade",
            "modifier": "Optional",
            "type": {
              "Plain": "89"
            },
            "fallback": "0x00",
            "docs": [
              " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
            ]
          },
          {
            "name": "UpgradedToU32RefCount",
            "modifier": "Default",
            "type": {
              "Plain": "91"
            },
            "fallback": "0x00",
            "docs": [
              " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
            ]
          },
          {
            "name": "UpgradedToTripleRefCount",
            "modifier": "Default",
            "type": {
              "Plain": "91"
            },
            "fallback": "0x00",
            "docs": [
              " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
              " (default) if not."
            ]
          },
          {
            "name": "ExecutionPhase",
            "modifier": "Optional",
            "type": {
              "Plain": "85"
            },
            "fallback": "0x00",
            "docs": [
              " The execution phase of the block."
            ]
          }
        ]
      },
      "calls": {
        "type": "92"
      },
      "events": {
        "type": "20"
      },
      "constants": [
        {
          "name": "BlockWeights",
          "type": "96",
          "value": "0x0700f2052a0100070088526a74020040010265cd1d000107c0d22c76510200e000010700e6bd4f570200f0000100000265cd1d000107c074c1906e0200300101070088526a7402004001010700a2941a1d020050000265cd1d00000000",
          "docs": [
            " Block & extrinsics weights: base values and limits."
          ]
        },
        {
          "name": "BlockLength",
          "type": "100",
          "value": "0x00003c000000500000005000",
          "docs": [
            " The maximum length of a block (in bytes)."
          ]
        },
        {
          "name": "BlockHashCount",
          "type": "4",
          "value": "0x00100000",
          "docs": [
            " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
          ]
        },
        {
          "name": "DbWeight",
          "type": "102",
          "value": "0x40787d010000000000e1f50500000000",
          "docs": [
            " The weight of runtime database operations the runtime can invoke."
          ]
        },
        {
          "name": "Version",
          "type": "103",
          "value": "0x487061726178696f6d2d70617261636861696e487061726178696f6d2d70617261636861696e0100000001000000000000002cdd718d5cc53262d401000000df6acb689907609b0400000037e397fc7c91f5e40100000040fe3ad401f8959a06000000d2bc9897eed08f1503000000f78b278be53f454c02000000ab3c0572291feb8b01000000bc9d89904f5b923f0100000037c8bb1350a9a2a802000000f3ff14d5ab52705902000000ea93e3f16f3d6962020000000100000001",
          "docs": [
            " Get the chain's current version."
          ]
        },
        {
          "name": "SS58Prefix",
          "type": "107",
          "value": "0x2a00",
          "docs": [
            " The designated SS58 prefix of this chain.",
            "",
            " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
            " that the runtime should know about the prefix in order to make use of it as",
            " an identifier of the chain."
          ]
        }
      ],
      "errors": {
        "type": "108"
      },
      "index": "0"
    },
    {
      "name": "ParachainSystem",
      "storage": {
        "prefix": "ParachainSystem",
        "items": [
          {
            "name": "PendingValidationCode",
            "modifier": "Default",
            "type": {
              "Plain": "12"
            },
            "fallback": "0x00",
            "docs": [
              " In case of a scheduled upgrade, this storage field contains the validation code to be applied.",
              "",
              " As soon as the relay chain gives us the go-ahead signal, we will overwrite the [`:code`][well_known_keys::CODE]",
              " which will result the next block process with the new validation code. This concludes the upgrade process.",
              "",
              " [well_known_keys::CODE]: sp_core::storage::well_known_keys::CODE"
            ]
          },
          {
            "name": "NewValidationCode",
            "modifier": "Optional",
            "type": {
              "Plain": "12"
            },
            "fallback": "0x00",
            "docs": [
              " Validation code that is set by the parachain and is to be communicated to collator and",
              " consequently the relay-chain.",
              "",
              " This will be cleared in `on_initialize` of each new block if no other pallet already set",
              " the value."
            ]
          },
          {
            "name": "ValidationData",
            "modifier": "Optional",
            "type": {
              "Plain": "109"
            },
            "fallback": "0x00",
            "docs": [
              " The [`PersistedValidationData`] set for this block.",
              " This value is expected to be set only once per block and it's never stored",
              " in the trie."
            ]
          },
          {
            "name": "DidSetValidationCode",
            "modifier": "Default",
            "type": {
              "Plain": "91"
            },
            "fallback": "0x00",
            "docs": [
              " Were the validation data set to notify the relay chain?"
            ]
          },
          {
            "name": "LastRelayChainBlockNumber",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " The relay chain block number associated with the last parachain block."
            ]
          },
          {
            "name": "UpgradeRestrictionSignal",
            "modifier": "Default",
            "type": {
              "Plain": "111"
            },
            "fallback": "0x00",
            "docs": [
              " An option which indicates if the relay-chain restricts signalling a validation code upgrade.",
              " In other words, if this is `Some` and [`NewValidationCode`] is `Some` then the produced",
              " candidate will be invalid.",
              "",
              " This storage item is a mirror of the corresponding value for the current parachain from the",
              " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
              " set after the inherent."
            ]
          },
          {
            "name": "RelayStateProof",
            "modifier": "Optional",
            "type": {
              "Plain": "113"
            },
            "fallback": "0x00",
            "docs": [
              " The state proof for the last relay parent block.",
              "",
              " This field is meant to be updated each block with the validation data inherent. Therefore,",
              " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
              "",
              " This data is also absent from the genesis."
            ]
          },
          {
            "name": "RelevantMessagingState",
            "modifier": "Optional",
            "type": {
              "Plain": "115"
            },
            "fallback": "0x00",
            "docs": [
              " The snapshot of some state related to messaging relevant to the current parachain as per",
              " the relay parent.",
              "",
              " This field is meant to be updated each block with the validation data inherent. Therefore,",
              " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
              "",
              " This data is also absent from the genesis."
            ]
          },
          {
            "name": "HostConfiguration",
            "modifier": "Optional",
            "type": {
              "Plain": "119"
            },
            "fallback": "0x00",
            "docs": [
              " The parachain host configuration that was obtained from the relay parent.",
              "",
              " This field is meant to be updated each block with the validation data inherent. Therefore,",
              " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
              "",
              " This data is also absent from the genesis."
            ]
          },
          {
            "name": "LastDmqMqcHead",
            "modifier": "Default",
            "type": {
              "Plain": "120"
            },
            "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "docs": [
              " The last downward message queue chain head we have observed.",
              "",
              " This value is loaded before and saved after processing inbound downward messages carried",
              " by the system inherent."
            ]
          },
          {
            "name": "LastHrmpMqcHeads",
            "modifier": "Default",
            "type": {
              "Plain": "121"
            },
            "fallback": "0x00",
            "docs": [
              " The message queue chain heads we have observed per each channel incoming channel.",
              "",
              " This value is loaded before and saved after processing inbound downward messages carried",
              " by the system inherent."
            ]
          },
          {
            "name": "ProcessedDownwardMessages",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " Number of downward messages processed in a block.",
              "",
              " This will be cleared in `on_initialize` of each new block."
            ]
          },
          {
            "name": "HrmpWatermark",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " HRMP watermark that was set in a block.",
              "",
              " This will be cleared in `on_initialize` of each new block."
            ]
          },
          {
            "name": "HrmpOutboundMessages",
            "modifier": "Default",
            "type": {
              "Plain": "124"
            },
            "fallback": "0x00",
            "docs": [
              " HRMP messages that were sent in a block.",
              "",
              " This will be cleared in `on_initialize` of each new block."
            ]
          },
          {
            "name": "UpwardMessages",
            "modifier": "Default",
            "type": {
              "Plain": "95"
            },
            "fallback": "0x00",
            "docs": [
              " Upward messages that were sent in a block.",
              "",
              " This will be cleared in `on_initialize` of each new block."
            ]
          },
          {
            "name": "PendingUpwardMessages",
            "modifier": "Default",
            "type": {
              "Plain": "95"
            },
            "fallback": "0x00",
            "docs": [
              " Upward messages that are still pending and not yet send to the relay chain."
            ]
          },
          {
            "name": "AnnouncedHrmpMessagesPerCandidate",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " The number of HRMP messages we observed in `on_initialize` and thus used that number for",
              " announcing the weight of `on_initialize` and `on_finalize`."
            ]
          },
          {
            "name": "ReservedXcmpWeightOverride",
            "modifier": "Optional",
            "type": {
              "Plain": "8"
            },
            "fallback": "0x00",
            "docs": [
              " The weight we reserve at the beginning of the block for processing XCMP messages. This",
              " overrides the amount set in the Config trait."
            ]
          },
          {
            "name": "ReservedDmpWeightOverride",
            "modifier": "Optional",
            "type": {
              "Plain": "8"
            },
            "fallback": "0x00",
            "docs": [
              " The weight we reserve at the beginning of the block for processing DMP messages. This",
              " overrides the amount set in the Config trait."
            ]
          },
          {
            "name": "AuthorizedUpgrade",
            "modifier": "Optional",
            "type": {
              "Plain": "11"
            },
            "fallback": "0x00",
            "docs": [
              " The next authorized upgrade, if there is one."
            ]
          },
          {
            "name": "CustomValidationHeadData",
            "modifier": "Optional",
            "type": {
              "Plain": "12"
            },
            "fallback": "0x00",
            "docs": [
              " A custom head data that should be returned as result of `validate_block`.",
              "",
              " See [`Pallet::set_custom_validation_head_data`] for more information."
            ]
          }
        ]
      },
      "calls": {
        "type": "126"
      },
      "events": {
        "type": "29"
      },
      "constants": [],
      "errors": {
        "type": "135"
      },
      "index": "1"
    },
    {
      "name": "Timestamp",
      "storage": {
        "prefix": "Timestamp",
        "items": [
          {
            "name": "Now",
            "modifier": "Default",
            "type": {
              "Plain": "10"
            },
            "fallback": "0x0000000000000000",
            "docs": [
              " Current time for the current block."
            ]
          },
          {
            "name": "DidUpdate",
            "modifier": "Default",
            "type": {
              "Plain": "91"
            },
            "fallback": "0x00",
            "docs": [
              " Did the timestamp get updated in this block?"
            ]
          }
        ]
      },
      "calls": {
        "type": "136"
      },
      "events": null,
      "constants": [
        {
          "name": "MinimumPeriod",
          "type": "10",
          "value": "0x7017000000000000",
          "docs": [
            " The minimum period between blocks. Beware that this is different to the *expected*",
            " period that the block production apparatus provides. Your chosen consensus system will",
            " generally work with this to determine a sensible block time. e.g. For Aura, it will be",
            " double this period on default settings."
          ]
        }
      ],
      "errors": null,
      "index": "2"
    },
    {
      "name": "ParachainInfo",
      "storage": {
        "prefix": "ParachainInfo",
        "items": [
          {
            "name": "ParachainId",
            "modifier": "Default",
            "type": {
              "Plain": "39"
            },
            "fallback": "0x64000000",
            "docs": []
          }
        ]
      },
      "calls": null,
      "events": null,
      "constants": [],
      "errors": null,
      "index": "3"
    },
    {
      "name": "Balances",
      "storage": {
        "prefix": "Balances",
        "items": [
          {
            "name": "TotalIssuance",
            "modifier": "Default",
            "type": {
              "Plain": "6"
            },
            "fallback": "0x00000000000000000000000000000000",
            "docs": [
              " The total units issued in the system."
            ]
          },
          {
            "name": "InactiveIssuance",
            "modifier": "Default",
            "type": {
              "Plain": "6"
            },
            "fallback": "0x00000000000000000000000000000000",
            "docs": [
              " The total units of outstanding deactivated balance in the system."
            ]
          },
          {
            "name": "Account",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "0",
                "value": "5"
              }
            },
            "fallback": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "docs": [
              " The Balances pallet example of storing the balance of an account.",
              "",
              " # Example",
              "",
              " ```nocompile",
              "  impl pallet_balances::Config for Runtime {",
              "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
              "  }",
              " ```",
              "",
              " You can also store the balance of an account in the `System` pallet.",
              "",
              " # Example",
              "",
              " ```nocompile",
              "  impl pallet_balances::Config for Runtime {",
              "   type AccountStore = System",
              "  }",
              " ```",
              "",
              " But this comes with tradeoffs, storing account balances in the system pallet stores",
              " `frame_system` data alongside the account data contrary to storing account balances in the",
              " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
              " NOTE: This is only used in the case that this pallet is used to store balances."
            ]
          },
          {
            "name": "Locks",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "0",
                "value": "137"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Any liquidity locks on some account balances.",
              " NOTE: Should only be accessed when setting, changing and freeing a lock."
            ]
          },
          {
            "name": "Reserves",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "0",
                "value": "141"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Named reserves on some account balances."
            ]
          }
        ]
      },
      "calls": {
        "type": "144"
      },
      "events": {
        "type": "30"
      },
      "constants": [
        {
          "name": "ExistentialDeposit",
          "type": "6",
          "value": "0x00ca9a3b000000000000000000000000",
          "docs": [
            " The minimum amount required to keep an account open."
          ]
        },
        {
          "name": "MaxLocks",
          "type": "4",
          "value": "0x32000000",
          "docs": [
            " The maximum number of locks that should exist on an account.",
            " Not strictly enforced, but used for weight estimation."
          ]
        },
        {
          "name": "MaxReserves",
          "type": "4",
          "value": "0x32000000",
          "docs": [
            " The maximum number of named reserves that can exist on an account."
          ]
        }
      ],
      "errors": {
        "type": "148"
      },
      "index": "10"
    },
    {
      "name": "TransactionPayment",
      "storage": {
        "prefix": "TransactionPayment",
        "items": [
          {
            "name": "NextFeeMultiplier",
            "modifier": "Default",
            "type": {
              "Plain": "149"
            },
            "fallback": "0x000064a7b3b6e00d0000000000000000",
            "docs": []
          },
          {
            "name": "StorageVersion",
            "modifier": "Default",
            "type": {
              "Plain": "150"
            },
            "fallback": "0x00",
            "docs": []
          }
        ]
      },
      "calls": null,
      "events": {
        "type": "32"
      },
      "constants": [
        {
          "name": "OperationalFeeMultiplier",
          "type": "2",
          "value": "0x05",
          "docs": [
            " A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
            " `priority`",
            "",
            " This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later",
            " added to a tip component in regular `priority` calculations.",
            " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
            " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
            "",
            " ```rust,ignore",
            " // For `Normal`",
            " let priority = priority_calc(tip);",
            "",
            " // For `Operational`",
            " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
            " let priority = priority_calc(tip + virtual_tip);",
            " ```",
            "",
            " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
            " sent with the transaction. So, not only does the transaction get a priority bump based",
            " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
            " transactions."
          ]
        }
      ],
      "errors": null,
      "index": "11"
    },
    {
      "name": "Authorship",
      "storage": {
        "prefix": "Authorship",
        "items": [
          {
            "name": "Uncles",
            "modifier": "Default",
            "type": {
              "Plain": "151"
            },
            "fallback": "0x00",
            "docs": [
              " Uncles"
            ]
          },
          {
            "name": "Author",
            "modifier": "Optional",
            "type": {
              "Plain": "0"
            },
            "fallback": "0x00",
            "docs": [
              " Author of current block."
            ]
          },
          {
            "name": "DidSetUncles",
            "modifier": "Default",
            "type": {
              "Plain": "91"
            },
            "fallback": "0x00",
            "docs": [
              " Whether uncles were already set in this block."
            ]
          }
        ]
      },
      "calls": {
        "type": "155"
      },
      "events": null,
      "constants": [
        {
          "name": "UncleGenerations",
          "type": "4",
          "value": "0x00000000",
          "docs": [
            " The number of blocks back we should accept uncles.",
            " This means that we will deal with uncle-parents that are",
            " `UncleGenerations + 1` before `now`."
          ]
        }
      ],
      "errors": {
        "type": "159"
      },
      "index": "20"
    },
    {
      "name": "CollatorSelection",
      "storage": {
        "prefix": "CollatorSelection",
        "items": [
          {
            "name": "Invulnerables",
            "modifier": "Default",
            "type": {
              "Plain": "160"
            },
            "fallback": "0x00",
            "docs": [
              " The invulnerable, fixed collators."
            ]
          },
          {
            "name": "Candidates",
            "modifier": "Default",
            "type": {
              "Plain": "161"
            },
            "fallback": "0x00",
            "docs": [
              " The (community, limited) collation candidates."
            ]
          },
          {
            "name": "LastAuthoredBlock",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "0",
                "value": "4"
              }
            },
            "fallback": "0x00000000",
            "docs": [
              " Last block authored by collator."
            ]
          },
          {
            "name": "DesiredCandidates",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " Desired number of candidates.",
              "",
              " This should ideally always be less than [`Config::MaxCandidates`] for weights to be correct."
            ]
          },
          {
            "name": "CandidacyBond",
            "modifier": "Default",
            "type": {
              "Plain": "6"
            },
            "fallback": "0x00000000000000000000000000000000",
            "docs": [
              " Fixed amount to deposit to become a collator.",
              "",
              " When a collator calls `leave_intent` they immediately receive the deposit back."
            ]
          }
        ]
      },
      "calls": {
        "type": "164"
      },
      "events": {
        "type": "33"
      },
      "constants": [],
      "errors": {
        "type": "165"
      },
      "index": "21"
    },
    {
      "name": "Session",
      "storage": {
        "prefix": "Session",
        "items": [
          {
            "name": "Validators",
            "modifier": "Default",
            "type": {
              "Plain": "34"
            },
            "fallback": "0x00",
            "docs": [
              " The current set of validators."
            ]
          },
          {
            "name": "CurrentIndex",
            "modifier": "Default",
            "type": {
              "Plain": "4"
            },
            "fallback": "0x00000000",
            "docs": [
              " Current index of the session."
            ]
          },
          {
            "name": "QueuedChanged",
            "modifier": "Default",
            "type": {
              "Plain": "91"
            },
            "fallback": "0x00",
            "docs": [
              " True if the underlying economic identities or weighting behind the validators",
              " has changed in the queued validator set."
            ]
          },
          {
            "name": "QueuedKeys",
            "modifier": "Default",
            "type": {
              "Plain": "166"
            },
            "fallback": "0x00",
            "docs": [
              " The queued keys for the next session. When the next session begins, these keys",
              " will be used to determine the validator's session keys."
            ]
          },
          {
            "name": "DisabledValidators",
            "modifier": "Default",
            "type": {
              "Plain": "171"
            },
            "fallback": "0x00",
            "docs": [
              " Indices of disabled validators.",
              "",
              " The vec is always kept sorted so that we can find whether a given validator is",
              " disabled using binary search. It gets cleared when `on_session_ending` returns",
              " a new set of identities."
            ]
          },
          {
            "name": "NextKeys",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "0",
                "value": "168"
              }
            },
            "fallback": "0x00",
            "docs": [
              " The next session keys for a validator."
            ]
          },
          {
            "name": "KeyOwner",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "172",
                "value": "0"
              }
            },
            "fallback": "0x00",
            "docs": [
              " The owner of a key. The key is the `KeyTypeId` + the encoded key."
            ]
          }
        ]
      },
      "calls": {
        "type": "174"
      },
      "events": {
        "type": "35"
      },
      "constants": [],
      "errors": {
        "type": "175"
      },
      "index": "22"
    },
    {
      "name": "Aura",
      "storage": {
        "prefix": "Aura",
        "items": [
          {
            "name": "Authorities",
            "modifier": "Default",
            "type": {
              "Plain": "176"
            },
            "fallback": "0x00",
            "docs": [
              " The current authority set."
            ]
          },
          {
            "name": "CurrentSlot",
            "modifier": "Default",
            "type": {
              "Plain": "178"
            },
            "fallback": "0x0000000000000000",
            "docs": [
              " The current slot of this block.",
              "",
              " This will be set in `on_initialize`."
            ]
          }
        ]
      },
      "calls": null,
      "events": null,
      "constants": [],
      "errors": null,
      "index": "23"
    },
    {
      "name": "AuraExt",
      "storage": {
        "prefix": "AuraExt",
        "items": [
          {
            "name": "Authorities",
            "modifier": "Default",
            "type": {
              "Plain": "176"
            },
            "fallback": "0x00",
            "docs": [
              " Serves as cache for the authorities.",
              "",
              " The authorities in AuRa are overwritten in `on_initialize` when we switch to a new session,",
              " but we require the old authorities to verify the seal when validating a PoV. This will always",
              " be updated to the latest AuRa authorities in `on_finalize`."
            ]
          }
        ]
      },
      "calls": null,
      "events": null,
      "constants": [],
      "errors": null,
      "index": "24"
    },
    {
      "name": "XcmpQueue",
      "storage": {
        "prefix": "XcmpQueue",
        "items": [
          {
            "name": "InboundXcmpStatus",
            "modifier": "Default",
            "type": {
              "Plain": "179"
            },
            "fallback": "0x00",
            "docs": [
              " Status of the inbound XCMP channels."
            ]
          },
          {
            "name": "InboundXcmpMessages",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat",
                  "Twox64Concat"
                ],
                "key": "185",
                "value": "12"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Inbound aggregate XCMP messages. It can only be one per ParaId/block."
            ]
          },
          {
            "name": "OutboundXcmpStatus",
            "modifier": "Default",
            "type": {
              "Plain": "186"
            },
            "fallback": "0x00",
            "docs": [
              " The non-empty XCMP channels in order of becoming non-empty, and the index of the first",
              " and last outbound message. If the two indices are equal, then it indicates an empty",
              " queue and there must be a non-`Ok` `OutboundStatus`. We assume queues grow no greater",
              " than 65535 items. Queue indices for normal messages begin at one; zero is reserved in",
              " case of the need to send a high-priority signal message this block.",
              " The bool is true if there is a signal message waiting to be sent."
            ]
          },
          {
            "name": "OutboundXcmpMessages",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat",
                  "Twox64Concat"
                ],
                "key": "189",
                "value": "12"
              }
            },
            "fallback": "0x00",
            "docs": [
              " The messages outbound in a given XCMP channel."
            ]
          },
          {
            "name": "SignalMessages",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "39",
                "value": "12"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Any signal messages waiting to be sent."
            ]
          },
          {
            "name": "QueueConfig",
            "modifier": "Default",
            "type": {
              "Plain": "190"
            },
            "fallback": "0x020000000500000001000000821a06000008000700c817a80402000400",
            "docs": [
              " The configuration which controls the dynamics of the outbound queue."
            ]
          },
          {
            "name": "Overweight",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat"
                ],
                "key": "10",
                "value": "191"
              }
            },
            "fallback": "0x00",
            "docs": [
              " The messages that exceeded max individual message weight budget.",
              "",
              " These message stay in this storage map until they are manually dispatched via",
              " `service_overweight`."
            ]
          },
          {
            "name": "OverweightCount",
            "modifier": "Default",
            "type": {
              "Plain": "10"
            },
            "fallback": "0x0000000000000000",
            "docs": [
              " The number of overweight messages ever recorded in `Overweight`. Also doubles as the next",
              " available free overweight index."
            ]
          },
          {
            "name": "QueueSuspended",
            "modifier": "Default",
            "type": {
              "Plain": "91"
            },
            "fallback": "0x00",
            "docs": [
              " Whether or not the XCMP queue is suspended from executing incoming XCMs or not."
            ]
          }
        ]
      },
      "calls": {
        "type": "192"
      },
      "events": {
        "type": "36"
      },
      "constants": [],
      "errors": {
        "type": "193"
      },
      "index": "30"
    },
    {
      "name": "PolkadotXcm",
      "storage": null,
      "calls": {
        "type": "194"
      },
      "events": {
        "type": "40"
      },
      "constants": [],
      "errors": {
        "type": "220"
      },
      "index": "31"
    },
    {
      "name": "CumulusXcm",
      "storage": null,
      "calls": null,
      "events": {
        "type": "79"
      },
      "constants": [],
      "errors": {
        "type": "221"
      },
      "index": "32"
    },
    {
      "name": "DmpQueue",
      "storage": {
        "prefix": "DmpQueue",
        "items": [
          {
            "name": "Configuration",
            "modifier": "Default",
            "type": {
              "Plain": "222"
            },
            "fallback": "0x0700e40b540202000400",
            "docs": [
              " The configuration."
            ]
          },
          {
            "name": "PageIndex",
            "modifier": "Default",
            "type": {
              "Plain": "223"
            },
            "fallback": "0x00000000000000000000000000000000",
            "docs": [
              " The page index."
            ]
          },
          {
            "name": "Pages",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "4",
                "value": "224"
              }
            },
            "fallback": "0x00",
            "docs": [
              " The queue pages."
            ]
          },
          {
            "name": "Overweight",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "10",
                "value": "225"
              }
            },
            "fallback": "0x00",
            "docs": [
              " The overweight messages."
            ]
          }
        ]
      },
      "calls": {
        "type": "226"
      },
      "events": {
        "type": "80"
      },
      "constants": [],
      "errors": {
        "type": "227"
      },
      "index": "33"
    },
    {
      "name": "RegistryPallet",
      "storage": {
        "prefix": "RegistryPallet",
        "items": [
          {
            "name": "ApiFeeds",
            "modifier": "Optional",
            "type": {
              "Map": {
                "hashers": [
                  "Twox64Concat",
                  "Twox64Concat"
                ],
                "key": "228",
                "value": "83"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Storage map for the feeds"
            ]
          },
          {
            "name": "Reporter",
            "modifier": "Default",
            "type": {
              "Map": {
                "hashers": [
                  "Blake2_128Concat"
                ],
                "key": "0",
                "value": "229"
              }
            },
            "fallback": "0x00",
            "docs": [
              " Storage map for the feed URL Endpoint"
            ]
          }
        ]
      },
      "calls": {
        "type": "232"
      },
      "events": {
        "type": "81"
      },
      "constants": [],
      "errors": {
        "type": "233"
      },
      "index": "40"
    }
  ],
  "extrinsic": {
    "type": "234",
    "version": "4",
    "signedExtensions": [
      {
        "identifier": "CheckNonZeroSender",
        "type": "243",
        "additionalSigned": "146"
      },
      {
        "identifier": "CheckSpecVersion",
        "type": "244",
        "additionalSigned": "4"
      },
      {
        "identifier": "CheckTxVersion",
        "type": "245",
        "additionalSigned": "4"
      },
      {
        "identifier": "CheckGenesis",
        "type": "246",
        "additionalSigned": "11"
      },
      {
        "identifier": "CheckMortality",
        "type": "247",
        "additionalSigned": "11"
      },
      {
        "identifier": "CheckNonce",
        "type": "249",
        "additionalSigned": "146"
      },
      {
        "identifier": "CheckWeight",
        "type": "250",
        "additionalSigned": "146"
      },
      {
        "identifier": "ChargeTransactionPayment",
        "type": "251",
        "additionalSigned": "146"
      }
    ]
  },
  "type": "252"
}
